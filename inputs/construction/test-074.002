TYPE construction_graph
INPUT 0
BODY
	create_graph urtree g 5
	add_edges g 4
		0 1
		1 2
		2 3
		3 4
		true
	assert num_nodes g 5
	assert num_edges g 4
	assert not_has_root g
	set_root g 4
	assert has_root g
	assert is_tree g
	output_graph g
	
	retrieve_subtree s1 g 0
	normalise s1
	output_graph s1
	assert is_tree s1
	assert has_root s1
	assert num_nodes s1 1
	assert num_edges s1 0
	
	retrieve_subtree s2 g 1
	normalise s2
	output_graph s2
	assert is_tree s2
	assert has_root s2
	assert num_nodes s2 2
	assert num_edges s2 1
	
	retrieve_subtree s3 g 2
	normalise s3
	output_graph s3
	assert is_tree s3
	assert has_root s3
	assert num_nodes s3 3
	assert num_edges s3 2
	
	retrieve_subtree s4 g 3
	normalise s4
	output_graph s4
	assert is_tree s4
	assert has_root s4
	assert num_nodes s4 4
	assert num_edges s4 3
	
	retrieve_subtree s5 g 4
	normalise s5
	output_graph s5
	assert is_tree s5
	assert has_root s5
	assert num_nodes s5 5
	assert num_edges s5 4
