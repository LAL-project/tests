TYPE construction_graph
INPUT 0
BODY
	create_graph drtree t 5
	assert num_nodes t 5
	assert num_edges t 0
	assert is_not_tree t
	assert is_rooted t
	
	assert num_verts_subtrees_not_valid t
	assert drtree_type_not_valid t
	
	assert not_has_root t
	set_root t 1
	assert has_root t
	
	add_edge t 0 1 false
	add_edge t 1 2 false
	add_edge t 2 3 false
	add_edge t 3 4 false
	assert is_tree t
	assert normalised t
	
	assert num_verts_subtrees_not_valid t
	assert drtree_type_not_valid t
	
	assert has_root t
	set_root t 0
	assert has_root t
	
	calculate_size_subtrees t
	find_drtree_type t
	
	assert num_verts_subtrees_valid t
	assert drtree_type_valid t
	set_root t 1
	assert num_verts_subtrees_not_valid t
	assert drtree_type_not_valid t
