TYPE construction_graph
INPUT 0
BODY
	read_graph ugraph g2 graphs/cycle/002 edge_list true
	assert_normalised g2
	assert_num_nodes g2 2
	assert_num_edges g2 1
	check_edge_iterator g2
	check_Q_iterator g2
	
	read_graph ugraph g3 graphs/cycle/003 edge_list true
	assert_normalised g3
	assert_num_nodes g3 3
	assert_num_edges g3 3
	check_edge_iterator g3
	check_Q_iterator g3
	
	read_graph ugraph g4 graphs/cycle/004 edge_list true
	assert_normalised g4
	assert_num_nodes g4 4
	assert_num_edges g4 4
	check_edge_iterator g4
	check_Q_iterator g4

	read_graph ugraph g5 graphs/cycle/005 edge_list true
	assert_normalised g5
	assert_num_nodes g5 5
	assert_num_edges g5 5
	check_edge_iterator g5
	check_Q_iterator g5
	
	read_graph ugraph g6 graphs/cycle/006 edge_list true
	assert_normalised g6
	assert_num_nodes g6 6
	assert_num_edges g6 6
	check_edge_iterator g6
	check_Q_iterator g6
	
	read_graph ugraph g7 graphs/cycle/007 edge_list true
	assert_normalised g7
	assert_num_nodes g7 7
	assert_num_edges g7 7
	check_edge_iterator g7
	check_Q_iterator g7
	
	read_graph ugraph g8 graphs/cycle/008 edge_list true
	assert_normalised g8
	assert_num_nodes g8 8
	assert_num_edges g8 8
	check_edge_iterator g8
	check_Q_iterator g8
	
	read_graph ugraph g9 graphs/cycle/009 edge_list true
	assert_normalised g9
	assert_num_nodes g9 9
	assert_num_edges g9 9
	check_edge_iterator g9
	check_Q_iterator g9
	
	read_graph ugraph g10 graphs/cycle/010 edge_list true
	assert_normalised g10
	assert_num_nodes g10 10
	assert_num_edges g10 10
	check_edge_iterator g10
	check_Q_iterator g10
