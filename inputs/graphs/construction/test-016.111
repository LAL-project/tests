TYPE graphs-construction

	create_graph ftree ft0 8
	add_edge ft0 0 1 false true
	add_edge ft0 0 2 false true
	assert normalized ft0
	add_edge ft0 0 4 false true
	add_edge ft0 0 3 false true
	assert not_normalized ft0
	add_edge ft0 1 5 false true
	add_edge ft0 1 6 false true
	add_edge ft0 1 7 true true
	assert normalized ft0
	output_graph ft0
	assert is_tree ft0
	
	calculate_tree_type ft0
	assert tree_type_valid ft0
	
	ftree_to_rtree_move rt0 ft0 0 false false
	output_graph rt0
	assert normalized rt0
	assert tree_type_valid rt0
	
	assert tree_type_not_valid ft0
	
	/* ----------------------------------------- */
	
	create_graph ftree ft1 8
	add_edge ft1 0 1 false true
	add_edge ft1 0 2 false true
	assert normalized ft1
	add_edge ft1 0 4 false true
	add_edge ft1 0 3 false true
	assert not_normalized ft1
	add_edge ft1 1 5 false true
	add_edge ft1 1 6 false true
	add_edge ft1 1 7 true true
	assert normalized ft1
	output_graph ft1
	assert is_tree ft1
	
	calculate_tree_type ft1
	assert tree_type_valid ft1
	
	ftree_to_rtree_move rt1 ft1 0 false true
	output_graph rt1
	assert normalized rt1
	assert tree_type_valid rt1
	
	assert tree_type_not_valid ft1
	
	/* ----------------------------------------- */
	
	create_graph ftree ft2 8
	add_edge ft2 0 1 false true
	add_edge ft2 0 2 false true
	assert normalized ft2
	add_edge ft2 0 4 false true
	add_edge ft2 0 3 false true
	assert not_normalized ft2
	add_edge ft2 1 5 false true
	add_edge ft2 1 6 false true
	add_edge ft2 1 7 true true
	assert normalized ft2
	output_graph ft2
	assert is_tree ft2
	
	calculate_tree_type ft2
	assert tree_type_valid ft2
	
	ftree_to_rtree_move rt2 ft2 0 true false
	output_graph rt2
	assert normalized rt2
	assert tree_type_valid rt2
	
	assert tree_type_not_valid ft2
