TYPE graphs-construction
INPUT 0
BODY
	create_graph rtree g1 5
	add_edges g1 4
		1 0
		2 1
		3 4
		2 3
		true true
	assert num_nodes g1 5
	assert num_edges g1 4
	assert not_has_root g1
	set_root g1 2
	assert has_root g1
	assert is_tree g1
	output_graph g1
	
	find_edge_orientation g1
	assert rtree_orientation_valid g1
	
	calculate_size_subtrees g1
	assert valid_subtree_sizes g1
	
	assert num_nodes_subtree g1 2 5
	assert num_nodes_subtree g1 3 2
	assert num_nodes_subtree g1 4 1
	assert num_nodes_subtree g1 1 2
	assert num_nodes_subtree g1 0 1
	
	retrieve_subtree s1 g1 0
	normalise s1
	output_graph s1
	assert is_tree s1
	assert has_root s1
	assert num_nodes s1 1
	assert num_edges s1 0
	assert valid_subtree_sizes s1
	assert num_nodes_subtree s1 0 1
	
	retrieve_subtree s2 g1 2
	normalise s2
	output_graph s2
	assert is_tree s2
	assert has_root s2
	assert num_nodes s2 5
	assert num_edges s2 4
	assert valid_subtree_sizes s2
	
	output_size_subtrees s2
