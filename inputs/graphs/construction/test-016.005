TYPE graphs-construction

	create_graph ftree g 7
	add_edge g 0 1 false true
	add_edge g 0 2 false true
	add_edge g 1 3 false true
	add_edge g 1 4 false true
	add_edge g 2 5 false true
	add_edge g 2 6 false true
	output_graph g
	assert is_tree g
	
	ftree_to_rtree_copy DRT_1 g 0
	output_graph DRT_1
	assert is_rooted DRT_1
	assert has_root DRT_1
	assert is_tree DRT_1
	assert num_edges DRT_1 6
	assert exists_edge DRT_1 0 1
	assert exists_edge DRT_1 1 3
	assert exists_edge DRT_1 1 4
	assert exists_edge DRT_1 0 2
	assert exists_edge DRT_1 2 5
	assert exists_edge DRT_1 2 6
	assert not_exists_edge DRT_1 1 5
	assert not_exists_edge DRT_1 1 6
	assert not_exists_edge DRT_1 2 3
	assert not_exists_edge DRT_1 2 4
	assert not_exists_edge DRT_1 0 3
	assert not_exists_edge DRT_1 0 4
	assert not_exists_edge DRT_1 0 5
	assert not_exists_edge DRT_1 0 6
	assert in_degree DRT_1 0 0
	assert in_degree DRT_1 1 1
	assert in_degree DRT_1 2 1
	assert in_degree DRT_1 3 1
	assert in_degree DRT_1 4 1
	assert in_degree DRT_1 5 1
	assert in_degree DRT_1 6 1
	assert out_degree DRT_1 0 2
	assert out_degree DRT_1 1 2
	assert out_degree DRT_1 2 2
	assert out_degree DRT_1 3 0
	assert out_degree DRT_1 4 0
	assert out_degree DRT_1 5 0
	assert out_degree DRT_1 6 0
	
	ftree_to_rtree_copy DRT_2 g 3
	output_graph DRT_2
	assert is_rooted DRT_2
	assert has_root DRT_2
	assert is_tree DRT_2
	assert num_edges DRT_2 6
	assert exists_edge DRT_2 3 1
	assert exists_edge DRT_2 1 4
	assert exists_edge DRT_2 1 0
	assert exists_edge DRT_1 0 2
	assert exists_edge DRT_1 2 5
	assert exists_edge DRT_1 2 6
	assert not_exists_edge DRT_2 0 1
	assert not_exists_edge DRT_2 1 3
	assert in_degree DRT_2 0 1
	assert in_degree DRT_2 1 1
	assert in_degree DRT_2 2 1
	assert in_degree DRT_2 3 0
	assert in_degree DRT_2 4 1
	assert in_degree DRT_2 5 1
	assert in_degree DRT_2 6 1
	assert out_degree DRT_2 0 1
	assert out_degree DRT_2 1 2
	assert out_degree DRT_2 2 2
	assert out_degree DRT_2 3 1
	assert out_degree DRT_2 4 0
	assert out_degree DRT_2 5 0
	assert out_degree DRT_2 6 0
