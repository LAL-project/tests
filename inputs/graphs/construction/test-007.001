TYPE graphs-construction
INPUT 0
BODY
	create_graph rtree t1 6
	add_edges t1 5
		0 1
		0 5
		1 2
		1 3
		3 4
		false true
	set_root t1 0
	assert has_root t1
	assert subtree_sizes_not_valid t1
	assert tree_type_not_valid t1
	calculate_tree_type t1
	assert tree_type_valid t1
	
	create_graph rtree t2 4
	add_edges t2 1
		0 1
		false true
	set_root t2 0
	assert has_root t2
	assert subtree_sizes_not_valid t2
	/* the type of tree can't be calculated for 't2' */
	assert is_not_tree t2
	assert tree_type_not_valid t2
	
	create_graph rtree T 0
	assert subtree_sizes_not_valid T
	disjoint_union T T t1 false
	assert has_root T
	assert subtree_sizes_not_valid T
	
	/* the type of tree here is valid because the disjoint union simply copied the tree */
	assert tree_type_valid T
	
	disjoint_union T T t2 true
	assert has_root T
	assert subtree_sizes_not_valid T
	assert tree_type_not_valid T
	
	/* make sure that the edge that joins the roots exist */
	assert exists_edge T 0 6
	assert subtree_sizes_not_valid T
	
