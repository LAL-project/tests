TYPE graphs-construction

	create_graph ftree ft 3
	assert num_nodes ft 3
	assert num_edges ft 0
	add_edge ft 0 1 false true
	add_edge ft 1 2 false true
	output_graph ft
	assert num_edges ft 2
	assert is_tree ft
	
	ftree_to_rtree_copy rt1 ft 0 false false
	output_graph rt1
	assert is_rooted rt1
	assert has_root rt1
	assert is_tree rt1
	assert num_edges rt1 2
	assert exists_edge rt1 0 1
	assert exists_edge rt1 1 2
	assert not_exists_edge rt1 1 0
	assert not_exists_edge rt1 2 1
	assert not_exists_edge rt1 2 0
	assert not_exists_edge rt1 0 2
	assert in_degree rt1 0 0
	assert in_degree rt1 1 1
	assert in_degree rt1 2 1
	assert out_degree rt1 0 1
	assert out_degree rt1 1 1
	assert out_degree rt1 2 0
	
	ftree_to_rtree_copy rt2 ft 1 false false
	output_graph rt2
	assert is_rooted rt2
	assert has_root rt2
	assert is_tree rt2
	assert num_edges rt2 2
	assert not_exists_edge rt2 0 1
	assert exists_edge rt2 1 2
	assert exists_edge rt2 1 0
	assert not_exists_edge rt2 2 1
	assert not_exists_edge rt2 2 0
	assert not_exists_edge rt2 0 2
	assert in_degree rt2 0 1
	assert in_degree rt2 1 0
	assert in_degree rt2 2 1
	assert out_degree rt2 0 0
	assert out_degree rt2 1 2
	assert out_degree rt2 2 0
	
	ftree_to_rtree_copy rt3 ft 2 false false
	output_graph rt3
	assert has_root rt3
	assert is_tree rt3
	assert num_edges rt3 2
	assert not_exists_edge rt3 0 1
	assert not_exists_edge rt3 1 2
	assert exists_edge rt3 1 0
	assert exists_edge rt3 2 1
	assert not_exists_edge rt3 2 0
	assert not_exists_edge rt3 0 2
	assert in_degree rt3 0 1
	assert in_degree rt3 1 1
	assert in_degree rt3 2 0
	assert out_degree rt3 0 0
	assert out_degree rt3 1 1
	assert out_degree rt3 2 1
