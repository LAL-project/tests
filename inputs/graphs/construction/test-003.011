TYPE graphs-construction
INPUT 0
BODY
	create_graph rtree t1 10
	add_edges t1 5
		0 1
		1 2
		2 3
		3 4
		4 5
		true true
	output_graph t1
	assert num_edges t1 5
	
	assert num_nodes_component t1 0 6
	assert num_nodes_component t1 1 6
	assert num_nodes_component t1 2 6
	assert num_nodes_component t1 3 6
	assert num_nodes_component t1 4 6
	assert num_nodes_component t1 5 6
	assert num_nodes_component t1 6 1
	assert num_nodes_component t1 7 1
	assert num_nodes_component t1 8 1
	assert num_nodes_component t1 9 1
	
	remove_edges_incident_to t1 3 true true
	output_graph t1
	assert num_edges t1 3
	
	assert num_nodes_component t1 0 3
	assert num_nodes_component t1 1 3
	assert num_nodes_component t1 2 3
	assert num_nodes_component t1 3 1
	assert num_nodes_component t1 4 2
	assert num_nodes_component t1 5 2
	assert num_nodes_component t1 6 1
	assert num_nodes_component t1 7 1
	assert num_nodes_component t1 8 1
	assert num_nodes_component t1 9 1
	
	add_edges t1 2
		2 3
		3 4
		true true
	output_graph t1
	assert num_edges t1 5
	
	remove_edges_incident_to t1 8 true true
	
	assert num_nodes_component t1 0 6
	assert num_nodes_component t1 1 6
	assert num_nodes_component t1 2 6
	assert num_nodes_component t1 3 6
	assert num_nodes_component t1 4 6
	assert num_nodes_component t1 5 6
	assert num_nodes_component t1 6 1
	assert num_nodes_component t1 7 1
	assert num_nodes_component t1 8 1
	assert num_nodes_component t1 9 1
