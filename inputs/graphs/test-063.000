TYPE graphs-construction
INPUT 0
BODY
	create_graph rtree g 5
	add_edges g 4
		0 1
		1 2
		2 3
		3 4
		false true
	assert rtree_type_not_valid g
	assert not_has_root g
	set_root g 0
	assert has_root g
	assert is_tree g
	find_rtree_type g
	assert rtree_type_valid g
	assert is_rtree_type g arborescence
	
	assert invalid_subtree_sizes g
	calculate_size_subtrees g
	assert valid_subtree_sizes g
	
	assert num_nodes_subtree g 0 5
	assert num_nodes_subtree g 1 4
	assert num_nodes_subtree g 2 3
	assert num_nodes_subtree g 3 2
	assert num_nodes_subtree g 4 1
	
	set_root g 4
	assert rtree_type_not_valid g
	find_rtree_type g
	assert is_rtree_type g anti_arborescence
	
	calculate_size_subtrees g
	assert num_nodes_subtree g 0 1
	assert num_nodes_subtree g 1 2
	assert num_nodes_subtree g 2 3
	assert num_nodes_subtree g 3 4
	assert num_nodes_subtree g 4 5
	
	create_graph rtree h 5
	add_edges h 4
		3 4
		1 2
		2 3
		0 1
		false true
	assert rtree_type_not_valid h
	assert not_has_root h
	set_root h 0
	assert has_root h
	assert is_tree h
	find_rtree_type h
	assert rtree_type_valid h
	assert is_rtree_type h arborescence
	
	assert invalid_subtree_sizes h
	calculate_size_subtrees h
	assert valid_subtree_sizes h
	
	assert num_nodes_subtree h 0 5
	assert num_nodes_subtree h 1 4
	assert num_nodes_subtree h 2 3
	assert num_nodes_subtree h 3 2
	assert num_nodes_subtree h 4 1
	
	set_root h 4
	
	assert rtree_type_not_valid h
	find_rtree_type h
	assert is_rtree_type h anti_arborescence
	
	calculate_size_subtrees h
	assert num_nodes_subtree h 0 1
	assert num_nodes_subtree h 1 2
	assert num_nodes_subtree h 2 3
	assert num_nodes_subtree h 3 4
	assert num_nodes_subtree h 4 5
	
	
	
	
	create_graph rtree f 5
	add_edges f 4
		0 1
		0 2
		0 3
		0 4
		false true
	assert rtree_type_not_valid f
	assert not_has_root f
	set_root f 0
	assert has_root f
	assert is_tree f
	find_rtree_type f
	assert rtree_type_valid f
	assert is_rtree_type f arborescence
	
	assert invalid_subtree_sizes f
	calculate_size_subtrees f
	assert valid_subtree_sizes f
	
	assert num_nodes_subtree f 0 5
	assert num_nodes_subtree f 1 1
	assert num_nodes_subtree f 2 1
	assert num_nodes_subtree f 3 1
	
	
	set_root f 3
	
	assert rtree_type_not_valid f
	find_rtree_type f
	assert is_rtree_type f none
	
	/* We can't calculate the size of the subtrees because this is
	not an actual rooted tree */
	
