TYPE graphs-construction
INPUT 0
BODY
	create_graph dgraph G 0
	assert num_nodes G 0
	assert num_edges G 0
	
	/* -- create another small subgraph */
	create_graph dgraph g1 4
	add_edges g1 5
		0 1
		0 2
		2 3
		1 3
		0 3
		true true
	assert not_exists_edge g1 1 2
	output_graph g1
	assert normalised g1
	
	disjoint_union G G g1
	assert not_exists_edge g1 1 2
	assert normalised G
	
	/* -- create another small subgraph */
	create_graph dgraph g2 4
	add_edges g2 6
		3 1
		3 0
		0 1
		0 2
		2 3
		1 2
		true true
	assert exists_edge g2 1 2
	output_graph g2
	assert normalised g2
	
	disjoint_union G G g2
	
	assert normalised G
	
	/* Although graph g2 has edge 1 2, graph G should not*/
	assert not_exists_edge G 1 2
	/* However, it should have edge 5 6 */
	assert exists_edge G 5 6
	
	output_graph G
	
	assert num_nodes G 8
	assert num_edges G 11
	
