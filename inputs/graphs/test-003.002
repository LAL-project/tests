TYPE graphs-construction
INPUT 0
BODY
	create_graph rtree g 5
	assert num_nodes g 5
	assert num_edges g 0
	assert is_not_tree g
	assert is_rooted g
	assert not_has_root g
	
	assert can_add_edge g 0 1
	assert can_add_edge g 0 2
	assert can_add_edge g 0 3
	assert can_add_edge g 0 4
	assert can_add_edge g 1 2
	assert can_add_edge g 1 3
	assert can_add_edge g 1 4
	assert can_add_edge g 2 3
	assert can_add_edge g 2 4
	assert can_add_edge g 3 4
	
	add_edge g 0 1 false true
	assert num_edges g 1
	assert is_not_tree g
	output_graph g
	
	assert cant_add_edge g 0 1
	assert can_add_edge g 0 2
	assert can_add_edge g 0 3
	assert can_add_edge g 0 4
	assert can_add_edge g 1 2
	assert can_add_edge g 1 3
	assert can_add_edge g 1 4
	assert can_add_edge g 2 3
	assert can_add_edge g 2 4
	assert can_add_edge g 3 4
	
	add_edge g 0 2 false true
	assert num_edges g 2
	assert is_not_tree g
	output_graph g
	
	assert cant_add_edge g 0 1
	assert cant_add_edge g 0 2
	assert can_add_edge g 0 3
	assert can_add_edge g 0 4
	assert cant_add_edge g 1 2
	assert can_add_edge g 1 3
	assert can_add_edge g 1 4
	assert can_add_edge g 2 3
	assert can_add_edge g 2 4
	assert can_add_edge g 3 4
	
	add_edge g 0 3 false true
	assert num_edges g 3
	assert is_not_tree g
	output_graph g
	
	assert cant_add_edge g 0 1
	assert cant_add_edge g 0 2
	assert cant_add_edge g 0 3
	assert can_add_edge g 0 4
	assert cant_add_edge g 1 2
	assert cant_add_edge g 1 3
	assert can_add_edge g 1 4
	assert cant_add_edge g 2 3
	assert can_add_edge g 2 4
	assert can_add_edge g 3 4
	
	add_edge g 0 4 false true
	assert num_edges g 4
	assert is_tree g
	output_graph g
	
	assert cant_add_edge g 0 1
	assert cant_add_edge g 0 2
	assert cant_add_edge g 0 3
	assert cant_add_edge g 0 4
	assert cant_add_edge g 1 2
	assert cant_add_edge g 1 3
	assert cant_add_edge g 1 4
	assert cant_add_edge g 2 3
	assert cant_add_edge g 2 4
	assert cant_add_edge g 3 4

	assert not_has_root g
	assert rtree_type_not_valid g
	assert invalid_subtree_sizes g
	set_root g 0
	assert rtree_type_not_valid g
	assert invalid_subtree_sizes g
	
	find_rtree_type g
	calculate_size_subtrees g
	calculate_size_subtrees g
	
	assert rtree_type_valid g
	assert valid_subtree_sizes g
	set_root g 0
	assert rtree_type_not_valid g
	assert invalid_subtree_sizes g
	
	find_rtree_type g
	calculate_size_subtrees g
	calculate_size_subtrees g
	
	set_root g 1
	assert rtree_type_not_valid g
	assert invalid_subtree_sizes g
