+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_undirected_graph()
-----------------------------------
case starting at line: 60
62:: g1.get_num_nodes()= 10
62:: g1.get_num_edges()= 0
62:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
66:: g1.get_num_nodes()= 0
66:: g1.get_num_edges()= 0
66:: Edges of 'g1':{}
67:: g2.get_num_nodes()= 10
67:: g2.get_num_edges()= 0
67:: Edges of 'g2':{}
-----------------------------------
case starting at line: 71
74:: g1.get_num_nodes()= 6
74:: g1.get_num_edges()= 5
74:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
78:: g1.get_num_nodes()= 0
78:: g1.get_num_edges()= 0
78:: Edges of 'g1':{}
79:: g2.get_num_nodes()= 6
79:: g2.get_num_edges()= 5
79:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 83
86:: g1.get_num_nodes()= 6
86:: g1.get_num_edges()= 5
86:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
91:: g1.get_num_nodes()= 0
91:: g1.get_num_edges()= 0
91:: Edges of 'g1':{}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 97
99:: g1.get_num_nodes()= 10
99:: g1.get_num_edges()= 0
99:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
104:: g1.get_num_nodes()= 0
104:: g1.get_num_edges()= 0
104:: Edges of 'g1':{}
105:: g2.get_num_nodes()= 10
105:: g2.get_num_edges()= 0
105:: Edges of 'g2':{}
-----------------------------------
case starting at line: 109
112:: g1.get_num_nodes()= 6
112:: g1.get_num_edges()= 5
112:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'g2 <- g1'
117:: g1.get_num_nodes()= 0
117:: g1.get_num_edges()= 0
117:: Edges of 'g1':{}
118:: g2.get_num_nodes()= 6
118:: g2.get_num_edges()= 5
118:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 122
125:: g1.get_num_nodes()= 6
125:: g1.get_num_edges()= 5
125:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
131:: g1.get_num_nodes()= 0
131:: g1.get_num_edges()= 0
131:: Edges of 'g1':{}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_undirected_graph()
-----------------------------------
case starting at line: 60
62:: g1.get_num_nodes()= 10
62:: g1.get_num_edges()= 0
62:: Edges of 'g1':{}
Copy constructor: 'g2 <- g1'
66:: g1.get_num_nodes()= 10
66:: g1.get_num_edges()= 0
66:: Edges of 'g1':{}
67:: g2.get_num_nodes()= 10
67:: g2.get_num_edges()= 0
67:: Edges of 'g2':{}
-----------------------------------
case starting at line: 71
74:: g1.get_num_nodes()= 6
74:: g1.get_num_edges()= 5
74:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'g2 <- g1'
78:: g1.get_num_nodes()= 6
78:: g1.get_num_edges()= 5
78:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
79:: g2.get_num_nodes()= 6
79:: g2.get_num_edges()= 5
79:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 83
86:: g1.get_num_nodes()= 6
86:: g1.get_num_edges()= 5
86:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'v[0] <- g1'
91:: g1.get_num_nodes()= 6
91:: g1.get_num_edges()= 5
91:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 97
99:: g1.get_num_nodes()= 10
99:: g1.get_num_edges()= 0
99:: Edges of 'g1':{}
Copy operator: 'g2 <- g1'
104:: g1.get_num_nodes()= 10
104:: g1.get_num_edges()= 0
104:: Edges of 'g1':{}
105:: g2.get_num_nodes()= 10
105:: g2.get_num_edges()= 0
105:: Edges of 'g2':{}
-----------------------------------
case starting at line: 109
112:: g1.get_num_nodes()= 6
112:: g1.get_num_edges()= 5
112:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'g2 <- g1'
117:: g1.get_num_nodes()= 6
117:: g1.get_num_edges()= 5
117:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
118:: g2.get_num_nodes()= 6
118:: g2.get_num_edges()= 5
118:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 122
125:: g1.get_num_nodes()= 6
125:: g1.get_num_edges()= 5
125:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'v[0] <- g1'
131:: g1.get_num_nodes()= 6
131:: g1.get_num_edges()= 5
131:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_directed_graph()
-----------------------------------
case starting at line: 60
62:: g1.get_num_nodes()= 10
62:: g1.get_num_edges()= 0
62:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
66:: g1.get_num_nodes()= 0
66:: g1.get_num_edges()= 0
66:: Edges of 'g1':{}
67:: g2.get_num_nodes()= 10
67:: g2.get_num_edges()= 0
67:: Edges of 'g2':{}
-----------------------------------
case starting at line: 71
74:: g1.get_num_nodes()= 6
74:: g1.get_num_edges()= 5
74:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
78:: g1.get_num_nodes()= 0
78:: g1.get_num_edges()= 0
78:: Edges of 'g1':{}
79:: g2.get_num_nodes()= 6
79:: g2.get_num_edges()= 5
79:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 83
86:: g1.get_num_nodes()= 6
86:: g1.get_num_edges()= 5
86:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
91:: g1.get_num_nodes()= 0
91:: g1.get_num_edges()= 0
91:: Edges of 'g1':{}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 97
99:: g1.get_num_nodes()= 10
99:: g1.get_num_edges()= 0
99:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
104:: g1.get_num_nodes()= 0
104:: g1.get_num_edges()= 0
104:: Edges of 'g1':{}
105:: g2.get_num_nodes()= 10
105:: g2.get_num_edges()= 0
105:: Edges of 'g2':{}
-----------------------------------
case starting at line: 109
112:: g1.get_num_nodes()= 6
112:: g1.get_num_edges()= 5
112:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'g2 <- g1'
117:: g1.get_num_nodes()= 0
117:: g1.get_num_edges()= 0
117:: Edges of 'g1':{}
118:: g2.get_num_nodes()= 6
118:: g2.get_num_edges()= 5
118:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 122
125:: g1.get_num_nodes()= 6
125:: g1.get_num_edges()= 5
125:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
131:: g1.get_num_nodes()= 0
131:: g1.get_num_edges()= 0
131:: Edges of 'g1':{}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_directed_graph()
-----------------------------------
case starting at line: 60
62:: g1.get_num_nodes()= 10
62:: g1.get_num_edges()= 0
62:: Edges of 'g1':{}
Copy constructor: 'g2 <- g1'
66:: g1.get_num_nodes()= 10
66:: g1.get_num_edges()= 0
66:: Edges of 'g1':{}
67:: g2.get_num_nodes()= 10
67:: g2.get_num_edges()= 0
67:: Edges of 'g2':{}
-----------------------------------
case starting at line: 71
74:: g1.get_num_nodes()= 6
74:: g1.get_num_edges()= 5
74:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'g2 <- g1'
78:: g1.get_num_nodes()= 6
78:: g1.get_num_edges()= 5
78:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
79:: g2.get_num_nodes()= 6
79:: g2.get_num_edges()= 5
79:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 83
86:: g1.get_num_nodes()= 6
86:: g1.get_num_edges()= 5
86:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'v[0] <- g1'
91:: g1.get_num_nodes()= 6
91:: g1.get_num_edges()= 5
91:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 97
99:: g1.get_num_nodes()= 10
99:: g1.get_num_edges()= 0
99:: Edges of 'g1':{}
Copy operator: 'g2 <- g1'
104:: g1.get_num_nodes()= 10
104:: g1.get_num_edges()= 0
104:: Edges of 'g1':{}
105:: g2.get_num_nodes()= 10
105:: g2.get_num_edges()= 0
105:: Edges of 'g2':{}
-----------------------------------
case starting at line: 109
112:: g1.get_num_nodes()= 6
112:: g1.get_num_edges()= 5
112:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'g2 <- g1'
117:: g1.get_num_nodes()= 6
117:: g1.get_num_edges()= 5
117:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
118:: g2.get_num_nodes()= 6
118:: g2.get_num_edges()= 5
118:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 122
125:: g1.get_num_nodes()= 6
125:: g1.get_num_edges()= 5
125:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'v[0] <- g1'
131:: g1.get_num_nodes()= 6
131:: g1.get_num_edges()= 5
131:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_ugraph_into_ftree()
-----------------------------------
case starting at line: 60
62:: g1.get_num_nodes()= 1
62:: g1.get_num_edges()= 0
62:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
66:: g1.get_num_nodes()= 0
66:: g1.get_num_edges()= 0
66:: Edges of 'g1':{}
67:: g2.get_num_nodes()= 1
67:: g2.get_num_edges()= 0
67:: Edges of 'g2':{}
g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 71
74:: g1.get_num_nodes()= 6
74:: g1.get_num_edges()= 5
74:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
78:: g1.get_num_nodes()= 0
78:: g1.get_num_edges()= 0
78:: Edges of 'g1':{}
79:: g2.get_num_nodes()= 6
79:: g2.get_num_edges()= 5
79:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
g2.get_num_nodes_component(0)= 6
g2.get_num_nodes_component(1)= 6
g2.get_num_nodes_component(2)= 6
g2.get_num_nodes_component(3)= 6
g2.get_num_nodes_component(4)= 6
g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 83
86:: g1.get_num_nodes()= 6
86:: g1.get_num_edges()= 5
86:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
91:: g1.get_num_nodes()= 0
91:: g1.get_num_edges()= 0
91:: Edges of 'g1':{}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 97
99:: g1.get_num_nodes()= 1
99:: g1.get_num_edges()= 0
99:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
104:: g1.get_num_nodes()= 0
104:: g1.get_num_edges()= 0
104:: Edges of 'g1':{}
105:: g2.get_num_nodes()= 1
105:: g2.get_num_edges()= 0
105:: Edges of 'g2':{}
g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 109
112:: g1.get_num_nodes()= 6
112:: g1.get_num_edges()= 5
112:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'g2 <- g1'
117:: g1.get_num_nodes()= 0
117:: g1.get_num_edges()= 0
117:: Edges of 'g1':{}
118:: g2.get_num_nodes()= 6
118:: g2.get_num_edges()= 5
118:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
g2.get_num_nodes_component(0)= 6
g2.get_num_nodes_component(1)= 6
g2.get_num_nodes_component(2)= 6
g2.get_num_nodes_component(3)= 6
g2.get_num_nodes_component(4)= 6
g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 122
125:: g1.get_num_nodes()= 6
125:: g1.get_num_edges()= 5
125:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
131:: g1.get_num_nodes()= 0
131:: g1.get_num_edges()= 0
131:: Edges of 'g1':{}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_ugraph_into_ftree()
-----------------------------------
case starting at line: 60
62:: g1.get_num_nodes()= 1
62:: g1.get_num_edges()= 0
62:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
66:: g1.get_num_nodes()= 1
66:: g1.get_num_edges()= 0
66:: Edges of 'g1':{}
67:: g2.get_num_nodes()= 1
67:: g2.get_num_edges()= 0
67:: Edges of 'g2':{}
g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 71
74:: g1.get_num_nodes()= 6
74:: g1.get_num_edges()= 5
74:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
78:: g1.get_num_nodes()= 6
78:: g1.get_num_edges()= 5
78:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
79:: g2.get_num_nodes()= 6
79:: g2.get_num_edges()= 5
79:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
g2.get_num_nodes_component(0)= 6
g2.get_num_nodes_component(1)= 6
g2.get_num_nodes_component(2)= 6
g2.get_num_nodes_component(3)= 6
g2.get_num_nodes_component(4)= 6
g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 83
86:: g1.get_num_nodes()= 6
86:: g1.get_num_edges()= 5
86:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
91:: g1.get_num_nodes()= 6
91:: g1.get_num_edges()= 5
91:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 97
99:: g1.get_num_nodes()= 1
99:: g1.get_num_edges()= 0
99:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
104:: g1.get_num_nodes()= 1
104:: g1.get_num_edges()= 0
104:: Edges of 'g1':{}
105:: g2.get_num_nodes()= 1
105:: g2.get_num_edges()= 0
105:: Edges of 'g2':{}
g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 109
112:: g1.get_num_nodes()= 6
112:: g1.get_num_edges()= 5
112:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'g2 <- g1'
117:: g1.get_num_nodes()= 6
117:: g1.get_num_edges()= 5
117:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
118:: g2.get_num_nodes()= 6
118:: g2.get_num_edges()= 5
118:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
g2.get_num_nodes_component(0)= 6
g2.get_num_nodes_component(1)= 6
g2.get_num_nodes_component(2)= 6
g2.get_num_nodes_component(3)= 6
g2.get_num_nodes_component(4)= 6
g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 122
125:: g1.get_num_nodes()= 6
125:: g1.get_num_edges()= 5
125:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
131:: g1.get_num_nodes()= 6
131:: g1.get_num_edges()= 5
131:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_free_tree()
-----------------------------------
case starting at line: 60
62:: t1.get_num_nodes()= 5
62:: t1.get_num_edges()= 0
62:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Move constructor: 't2 <- t1'
66:: t1.get_num_nodes()= 0
66:: t1.get_num_edges()= 0
66:: Edges of 't1':{}
67:: t2.get_num_nodes()= 5
67:: t2.get_num_edges()= 0
67:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 71
74:: t1.get_num_nodes()= 5
74:: t1.get_num_edges()= 4
74:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
Move constructor: 't2 <- t1'
78:: t1.get_num_nodes()= 0
78:: t1.get_num_edges()= 0
78:: Edges of 't1':{}
79:: t2.get_num_nodes()= 5
79:: t2.get_num_edges()= 4
79:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 83
86:: t1.get_num_nodes()= 6
86:: t1.get_num_edges()= 5
86:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
t1.get_num_nodes_component(0)= 6
t1.get_num_nodes_component(1)= 6
t1.get_num_nodes_component(2)= 6
t1.get_num_nodes_component(3)= 6
t1.get_num_nodes_component(4)= 6
t1.get_num_nodes_component(5)= 6
Move constructor: 'v[0] <- t1'
91:: t1.get_num_nodes()= 0
91:: t1.get_num_edges()= 0
91:: Edges of 't1':{}
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 97
99:: t1.get_num_nodes()= 5
99:: t1.get_num_edges()= 0
99:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Move operator: 't2 <- t1'
104:: t1.get_num_nodes()= 0
104:: t1.get_num_edges()= 0
104:: Edges of 't1':{}
105:: t2.get_num_nodes()= 5
105:: t2.get_num_edges()= 0
105:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 109
112:: t1.get_num_nodes()= 5
112:: t1.get_num_edges()= 4
112:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
Move operator: 't2 <- t1'
117:: t1.get_num_nodes()= 0
117:: t1.get_num_edges()= 0
117:: Edges of 't1':{}
118:: t2.get_num_nodes()= 5
118:: t2.get_num_edges()= 4
118:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 122
125:: t1.get_num_nodes()= 6
125:: t1.get_num_edges()= 5
125:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
t1.get_num_nodes_component(0)= 6
t1.get_num_nodes_component(1)= 6
t1.get_num_nodes_component(2)= 6
t1.get_num_nodes_component(3)= 6
t1.get_num_nodes_component(4)= 6
t1.get_num_nodes_component(5)= 6
Move operator: 'v[0] <- t1'
131:: t1.get_num_nodes()= 0
131:: t1.get_num_edges()= 0
131:: Edges of 't1':{}
132:: v[0].get_num_nodes()= 6
132:: v[0].get_num_edges()= 5
132:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_free_tree()
-----------------------------------
case starting at line: 60
62:: t1.get_num_nodes()= 5
62:: t1.get_num_edges()= 0
62:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Copy constructor: 't2 <- t1'
66:: t1.get_num_nodes()= 5
66:: t1.get_num_edges()= 0
66:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
67:: t2.get_num_nodes()= 5
67:: t2.get_num_edges()= 0
67:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 71
74:: t1.get_num_nodes()= 5
74:: t1.get_num_edges()= 4
74:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
Copy constructor: 't2 <- t1'
78:: t1.get_num_nodes()= 5
78:: t1.get_num_edges()= 4
78:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
79:: t2.get_num_nodes()= 5
79:: t2.get_num_edges()= 4
79:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 83
86:: t1.get_num_nodes()= 6
86:: t1.get_num_edges()= 5
86:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
t1.get_num_nodes_component(0)= 6
t1.get_num_nodes_component(1)= 6
t1.get_num_nodes_component(2)= 6
t1.get_num_nodes_component(3)= 6
t1.get_num_nodes_component(4)= 6
t1.get_num_nodes_component(5)= 6
Copy constructor: 'v[0] <- t1'
91:: t1.get_num_nodes()= 6
91:: t1.get_num_edges()= 5
91:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
t1.get_num_nodes_component(0)= 6
t1.get_num_nodes_component(1)= 6
t1.get_num_nodes_component(2)= 6
t1.get_num_nodes_component(3)= 6
t1.get_num_nodes_component(4)= 6
t1.get_num_nodes_component(5)= 6
92:: v[0].get_num_nodes()= 6
92:: v[0].get_num_edges()= 5
92:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 96
100:: t.get_num_nodes()= 5
100:: t.get_num_edges()= 4
100:: Edges of 't':{ (0,1) (1,2) (2,3) (3,4)}
t.get_num_nodes_component(0)= 5
t.get_num_nodes_component(1)= 5
t.get_num_nodes_component(2)= 5
t.get_num_nodes_component(3)= 5
t.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 105
107:: t1.get_num_nodes()= 5
107:: t1.get_num_edges()= 0
107:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Copy operator: 't2 <- t1'
112:: t1.get_num_nodes()= 5
112:: t1.get_num_edges()= 0
112:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
113:: t2.get_num_nodes()= 5
113:: t2.get_num_edges()= 0
113:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 117
120:: t1.get_num_nodes()= 5
120:: t1.get_num_edges()= 4
120:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
Copy operator: 't2 <- t1'
125:: t1.get_num_nodes()= 5
125:: t1.get_num_edges()= 4
125:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
126:: t2.get_num_nodes()= 5
126:: t2.get_num_edges()= 4
126:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 130
133:: t1.get_num_nodes()= 6
133:: t1.get_num_edges()= 5
133:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
t1.get_num_nodes_component(0)= 6
t1.get_num_nodes_component(1)= 6
t1.get_num_nodes_component(2)= 6
t1.get_num_nodes_component(3)= 6
t1.get_num_nodes_component(4)= 6
t1.get_num_nodes_component(5)= 6
Copy operator: 'v[0] <- t1'
139:: t1.get_num_nodes()= 6
139:: t1.get_num_edges()= 5
139:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
t1.get_num_nodes_component(0)= 6
t1.get_num_nodes_component(1)= 6
t1.get_num_nodes_component(2)= 6
t1.get_num_nodes_component(3)= 6
t1.get_num_nodes_component(4)= 6
t1.get_num_nodes_component(5)= 6
140:: v[0].get_num_nodes()= 6
140:: v[0].get_num_edges()= 5
140:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
v[0].get_num_nodes_component(0)= 6
v[0].get_num_nodes_component(1)= 6
v[0].get_num_nodes_component(2)= 6
v[0].get_num_nodes_component(3)= 6
v[0].get_num_nodes_component(4)= 6
v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_rooted_tree()
-----------------------------------
case starting at line: 60
62:: t1.get_num_nodes()= 5
62:: t1.get_num_edges()= 0
62:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Move constructor: 't2 <- t1'
66:: t1.get_num_nodes()= 0
66:: t1.get_num_edges()= 0
66:: Edges of 't1':{}
67:: t2.get_num_nodes()= 5
67:: t2.get_num_edges()= 0
67:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 71
76:: t1.get_num_nodes()= 5
76:: t1.get_num_edges()= 4
76:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
76:: t1.get_root()= 3
76:: t1.get_num_nodes_subtree(0)= 1
76:: t1.get_num_nodes_subtree(1)= 1
76:: t1.get_num_nodes_subtree(2)= 2
76:: t1.get_num_nodes_subtree(3)= 5
76:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 't2 <- t1'
80:: t1.get_num_nodes()= 0
80:: t1.get_num_edges()= 0
80:: Edges of 't1':{}
81:: t2.get_num_nodes()= 5
81:: t2.get_num_edges()= 4
81:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
81:: t2.get_root()= 3
81:: t2.get_num_nodes_subtree(0)= 1
81:: t2.get_num_nodes_subtree(1)= 1
81:: t2.get_num_nodes_subtree(2)= 2
81:: t2.get_num_nodes_subtree(3)= 5
81:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 85
90:: t1.get_num_nodes()= 5
90:: t1.get_num_edges()= 4
90:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
90:: t1.get_root()= 3
90:: t1.get_num_nodes_subtree(0)= 1
90:: t1.get_num_nodes_subtree(1)= 1
90:: t1.get_num_nodes_subtree(2)= 2
90:: t1.get_num_nodes_subtree(3)= 5
90:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 'v[0] <- t1'
95:: t1.get_num_nodes()= 0
95:: t1.get_num_edges()= 0
95:: Edges of 't1':{}
96:: v[0].get_num_nodes()= 5
96:: v[0].get_num_edges()= 4
96:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
v[0].get_num_nodes_component(0)= 5
v[0].get_num_nodes_component(1)= 5
v[0].get_num_nodes_component(2)= 5
v[0].get_num_nodes_component(3)= 5
v[0].get_num_nodes_component(4)= 5
96:: v[0].get_root()= 3
96:: v[0].get_num_nodes_subtree(0)= 1
96:: v[0].get_num_nodes_subtree(1)= 1
96:: v[0].get_num_nodes_subtree(2)= 2
96:: v[0].get_num_nodes_subtree(3)= 5
96:: v[0].get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 101
103:: t1.get_num_nodes()= 5
103:: t1.get_num_edges()= 0
103:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Move constructor: 't2 <- t1'
108:: t1.get_num_nodes()= 0
108:: t1.get_num_edges()= 0
108:: Edges of 't1':{}
109:: t2.get_num_nodes()= 5
109:: t2.get_num_edges()= 0
109:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 113
118:: t1.get_num_nodes()= 5
118:: t1.get_num_edges()= 4
118:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
118:: t1.get_root()= 3
118:: t1.get_num_nodes_subtree(0)= 1
118:: t1.get_num_nodes_subtree(1)= 1
118:: t1.get_num_nodes_subtree(2)= 2
118:: t1.get_num_nodes_subtree(3)= 5
118:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 't2 <- t1'
123:: t1.get_num_nodes()= 0
123:: t1.get_num_edges()= 0
123:: Edges of 't1':{}
124:: t2.get_num_nodes()= 5
124:: t2.get_num_edges()= 4
124:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
124:: t2.get_root()= 3
124:: t2.get_num_nodes_subtree(0)= 1
124:: t2.get_num_nodes_subtree(1)= 1
124:: t2.get_num_nodes_subtree(2)= 2
124:: t2.get_num_nodes_subtree(3)= 5
124:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 128
133:: t1.get_num_nodes()= 5
133:: t1.get_num_edges()= 4
133:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
133:: t1.get_root()= 3
133:: t1.get_num_nodes_subtree(0)= 1
133:: t1.get_num_nodes_subtree(1)= 1
133:: t1.get_num_nodes_subtree(2)= 2
133:: t1.get_num_nodes_subtree(3)= 5
133:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 'v[0] <- t1'
139:: t1.get_num_nodes()= 0
139:: t1.get_num_edges()= 0
139:: Edges of 't1':{}
140:: v[0].get_num_nodes()= 5
140:: v[0].get_num_edges()= 4
140:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
v[0].get_num_nodes_component(0)= 5
v[0].get_num_nodes_component(1)= 5
v[0].get_num_nodes_component(2)= 5
v[0].get_num_nodes_component(3)= 5
v[0].get_num_nodes_component(4)= 5
140:: v[0].get_root()= 3
140:: v[0].get_num_nodes_subtree(0)= 1
140:: v[0].get_num_nodes_subtree(1)= 1
140:: v[0].get_num_nodes_subtree(2)= 2
140:: v[0].get_num_nodes_subtree(3)= 5
140:: v[0].get_num_nodes_subtree(4)= 1
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_rooted_tree()
-----------------------------------
case starting at line: 60
62:: t1.get_num_nodes()= 5
62:: t1.get_num_edges()= 0
62:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Copy constructor: 't2 <- t1'
66:: t1.get_num_nodes()= 5
66:: t1.get_num_edges()= 0
66:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
67:: t2.get_num_nodes()= 5
67:: t2.get_num_edges()= 0
67:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 71
76:: t1.get_num_nodes()= 5
76:: t1.get_num_edges()= 4
76:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
76:: t1.get_root()= 3
76:: t1.get_num_nodes_subtree(0)= 1
76:: t1.get_num_nodes_subtree(1)= 1
76:: t1.get_num_nodes_subtree(2)= 2
76:: t1.get_num_nodes_subtree(3)= 5
76:: t1.get_num_nodes_subtree(4)= 1
Copy constructor: 't2 <- t1'
80:: t1.get_num_nodes()= 5
80:: t1.get_num_edges()= 4
80:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
80:: t1.get_root()= 3
80:: t1.get_num_nodes_subtree(0)= 1
80:: t1.get_num_nodes_subtree(1)= 1
80:: t1.get_num_nodes_subtree(2)= 2
80:: t1.get_num_nodes_subtree(3)= 5
80:: t1.get_num_nodes_subtree(4)= 1
81:: t2.get_num_nodes()= 5
81:: t2.get_num_edges()= 4
81:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
81:: t2.get_root()= 3
81:: t2.get_num_nodes_subtree(0)= 1
81:: t2.get_num_nodes_subtree(1)= 1
81:: t2.get_num_nodes_subtree(2)= 2
81:: t2.get_num_nodes_subtree(3)= 5
81:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 85
90:: t1.get_num_nodes()= 5
90:: t1.get_num_edges()= 4
90:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
90:: t1.get_root()= 3
90:: t1.get_num_nodes_subtree(0)= 1
90:: t1.get_num_nodes_subtree(1)= 1
90:: t1.get_num_nodes_subtree(2)= 2
90:: t1.get_num_nodes_subtree(3)= 5
90:: t1.get_num_nodes_subtree(4)= 1
Copy constructor: 'v[0] <- t1'
95:: t1.get_num_nodes()= 5
95:: t1.get_num_edges()= 4
95:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
95:: t1.get_root()= 3
95:: t1.get_num_nodes_subtree(0)= 1
95:: t1.get_num_nodes_subtree(1)= 1
95:: t1.get_num_nodes_subtree(2)= 2
95:: t1.get_num_nodes_subtree(3)= 5
95:: t1.get_num_nodes_subtree(4)= 1
96:: v[0].get_num_nodes()= 5
96:: v[0].get_num_edges()= 4
96:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
v[0].get_num_nodes_component(0)= 5
v[0].get_num_nodes_component(1)= 5
v[0].get_num_nodes_component(2)= 5
v[0].get_num_nodes_component(3)= 5
v[0].get_num_nodes_component(4)= 5
96:: v[0].get_root()= 3
96:: v[0].get_num_nodes_subtree(0)= 1
96:: v[0].get_num_nodes_subtree(1)= 1
96:: v[0].get_num_nodes_subtree(2)= 2
96:: v[0].get_num_nodes_subtree(3)= 5
96:: v[0].get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 101
103:: t1.get_num_nodes()= 5
103:: t1.get_num_edges()= 0
103:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
Copy operator: 't2 <- t1'
108:: t1.get_num_nodes()= 5
108:: t1.get_num_edges()= 0
108:: Edges of 't1':{}
t1.get_num_nodes_component(0)= 1
t1.get_num_nodes_component(1)= 1
t1.get_num_nodes_component(2)= 1
t1.get_num_nodes_component(3)= 1
t1.get_num_nodes_component(4)= 1
109:: t2.get_num_nodes()= 5
109:: t2.get_num_edges()= 0
109:: Edges of 't2':{}
t2.get_num_nodes_component(0)= 1
t2.get_num_nodes_component(1)= 1
t2.get_num_nodes_component(2)= 1
t2.get_num_nodes_component(3)= 1
t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 113
118:: t1.get_num_nodes()= 5
118:: t1.get_num_edges()= 4
118:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
118:: t1.get_root()= 3
118:: t1.get_num_nodes_subtree(0)= 1
118:: t1.get_num_nodes_subtree(1)= 1
118:: t1.get_num_nodes_subtree(2)= 2
118:: t1.get_num_nodes_subtree(3)= 5
118:: t1.get_num_nodes_subtree(4)= 1
Copy operator: 't2 <- t1'
123:: t1.get_num_nodes()= 5
123:: t1.get_num_edges()= 4
123:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
123:: t1.get_root()= 3
123:: t1.get_num_nodes_subtree(0)= 1
123:: t1.get_num_nodes_subtree(1)= 1
123:: t1.get_num_nodes_subtree(2)= 2
123:: t1.get_num_nodes_subtree(3)= 5
123:: t1.get_num_nodes_subtree(4)= 1
124:: t2.get_num_nodes()= 5
124:: t2.get_num_edges()= 4
124:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
t2.get_num_nodes_component(0)= 5
t2.get_num_nodes_component(1)= 5
t2.get_num_nodes_component(2)= 5
t2.get_num_nodes_component(3)= 5
t2.get_num_nodes_component(4)= 5
124:: t2.get_root()= 3
124:: t2.get_num_nodes_subtree(0)= 1
124:: t2.get_num_nodes_subtree(1)= 1
124:: t2.get_num_nodes_subtree(2)= 2
124:: t2.get_num_nodes_subtree(3)= 5
124:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 128
133:: t1.get_num_nodes()= 5
133:: t1.get_num_edges()= 4
133:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
133:: t1.get_root()= 3
133:: t1.get_num_nodes_subtree(0)= 1
133:: t1.get_num_nodes_subtree(1)= 1
133:: t1.get_num_nodes_subtree(2)= 2
133:: t1.get_num_nodes_subtree(3)= 5
133:: t1.get_num_nodes_subtree(4)= 1
Copy operator: 'v[0] <- t1'
139:: t1.get_num_nodes()= 5
139:: t1.get_num_edges()= 4
139:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
t1.get_num_nodes_component(0)= 5
t1.get_num_nodes_component(1)= 5
t1.get_num_nodes_component(2)= 5
t1.get_num_nodes_component(3)= 5
t1.get_num_nodes_component(4)= 5
139:: t1.get_root()= 3
139:: t1.get_num_nodes_subtree(0)= 1
139:: t1.get_num_nodes_subtree(1)= 1
139:: t1.get_num_nodes_subtree(2)= 2
139:: t1.get_num_nodes_subtree(3)= 5
139:: t1.get_num_nodes_subtree(4)= 1
140:: v[0].get_num_nodes()= 5
140:: v[0].get_num_edges()= 4
140:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
v[0].get_num_nodes_component(0)= 5
v[0].get_num_nodes_component(1)= 5
v[0].get_num_nodes_component(2)= 5
v[0].get_num_nodes_component(3)= 5
v[0].get_num_nodes_component(4)= 5
140:: v[0].get_root()= 3
140:: v[0].get_num_nodes_subtree(0)= 1
140:: v[0].get_num_nodes_subtree(1)= 1
140:: v[0].get_num_nodes_subtree(2)= 2
140:: v[0].get_num_nodes_subtree(3)= 5
140:: v[0].get_num_nodes_subtree(4)= 1
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_generate()
-----------------------------------
case starting at line: 77
-----------------------------------
case starting at line: 84
-----------------------------------
case starting at line: 91
-----------------------------------
case starting at line: 98
Test finished without apparent errors.
