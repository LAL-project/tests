+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_undirected_graph()
-----------------------------------
case starting at line: 58
60:: g1.get_num_nodes()= 10
60:: g1.get_num_edges()= 0
60:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
64:: g1.get_num_nodes()= 0
64:: g1.get_num_edges()= 0
64:: Edges of 'g1':{}
65:: g2.get_num_nodes()= 10
65:: g2.get_num_edges()= 0
65:: Edges of 'g2':{}
-----------------------------------
case starting at line: 69
72:: g1.get_num_nodes()= 6
72:: g1.get_num_edges()= 5
72:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
76:: g1.get_num_nodes()= 0
76:: g1.get_num_edges()= 0
76:: Edges of 'g1':{}
77:: g2.get_num_nodes()= 6
77:: g2.get_num_edges()= 5
77:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 81
84:: g1.get_num_nodes()= 6
84:: g1.get_num_edges()= 5
84:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
89:: g1.get_num_nodes()= 0
89:: g1.get_num_edges()= 0
89:: Edges of 'g1':{}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 95
97:: g1.get_num_nodes()= 10
97:: g1.get_num_edges()= 0
97:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
102:: g1.get_num_nodes()= 0
102:: g1.get_num_edges()= 0
102:: Edges of 'g1':{}
103:: g2.get_num_nodes()= 10
103:: g2.get_num_edges()= 0
103:: Edges of 'g2':{}
-----------------------------------
case starting at line: 107
110:: g1.get_num_nodes()= 6
110:: g1.get_num_edges()= 5
110:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'g2 <- g1'
115:: g1.get_num_nodes()= 0
115:: g1.get_num_edges()= 0
115:: Edges of 'g1':{}
116:: g2.get_num_nodes()= 6
116:: g2.get_num_edges()= 5
116:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 120
123:: g1.get_num_nodes()= 6
123:: g1.get_num_edges()= 5
123:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
129:: g1.get_num_nodes()= 0
129:: g1.get_num_edges()= 0
129:: Edges of 'g1':{}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_undirected_graph()
-----------------------------------
case starting at line: 58
60:: g1.get_num_nodes()= 10
60:: g1.get_num_edges()= 0
60:: Edges of 'g1':{}
Copy constructor: 'g2 <- g1'
64:: g1.get_num_nodes()= 10
64:: g1.get_num_edges()= 0
64:: Edges of 'g1':{}
65:: g2.get_num_nodes()= 10
65:: g2.get_num_edges()= 0
65:: Edges of 'g2':{}
-----------------------------------
case starting at line: 69
72:: g1.get_num_nodes()= 6
72:: g1.get_num_edges()= 5
72:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'g2 <- g1'
76:: g1.get_num_nodes()= 6
76:: g1.get_num_edges()= 5
76:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
77:: g2.get_num_nodes()= 6
77:: g2.get_num_edges()= 5
77:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 81
84:: g1.get_num_nodes()= 6
84:: g1.get_num_edges()= 5
84:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'v[0] <- g1'
89:: g1.get_num_nodes()= 6
89:: g1.get_num_edges()= 5
89:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 95
97:: g1.get_num_nodes()= 10
97:: g1.get_num_edges()= 0
97:: Edges of 'g1':{}
Copy operator: 'g2 <- g1'
102:: g1.get_num_nodes()= 10
102:: g1.get_num_edges()= 0
102:: Edges of 'g1':{}
103:: g2.get_num_nodes()= 10
103:: g2.get_num_edges()= 0
103:: Edges of 'g2':{}
-----------------------------------
case starting at line: 107
110:: g1.get_num_nodes()= 6
110:: g1.get_num_edges()= 5
110:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'g2 <- g1'
115:: g1.get_num_nodes()= 6
115:: g1.get_num_edges()= 5
115:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
116:: g2.get_num_nodes()= 6
116:: g2.get_num_edges()= 5
116:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 120
123:: g1.get_num_nodes()= 6
123:: g1.get_num_edges()= 5
123:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'v[0] <- g1'
129:: g1.get_num_nodes()= 6
129:: g1.get_num_edges()= 5
129:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_directed_graph()
-----------------------------------
case starting at line: 58
60:: g1.get_num_nodes()= 10
60:: g1.get_num_edges()= 0
60:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
64:: g1.get_num_nodes()= 0
64:: g1.get_num_edges()= 0
64:: Edges of 'g1':{}
65:: g2.get_num_nodes()= 10
65:: g2.get_num_edges()= 0
65:: Edges of 'g2':{}
-----------------------------------
case starting at line: 69
72:: g1.get_num_nodes()= 6
72:: g1.get_num_edges()= 5
72:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
76:: g1.get_num_nodes()= 0
76:: g1.get_num_edges()= 0
76:: Edges of 'g1':{}
77:: g2.get_num_nodes()= 6
77:: g2.get_num_edges()= 5
77:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 81
84:: g1.get_num_nodes()= 6
84:: g1.get_num_edges()= 5
84:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
89:: g1.get_num_nodes()= 0
89:: g1.get_num_edges()= 0
89:: Edges of 'g1':{}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 95
97:: g1.get_num_nodes()= 10
97:: g1.get_num_edges()= 0
97:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
102:: g1.get_num_nodes()= 0
102:: g1.get_num_edges()= 0
102:: Edges of 'g1':{}
103:: g2.get_num_nodes()= 10
103:: g2.get_num_edges()= 0
103:: Edges of 'g2':{}
-----------------------------------
case starting at line: 107
110:: g1.get_num_nodes()= 6
110:: g1.get_num_edges()= 5
110:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'g2 <- g1'
115:: g1.get_num_nodes()= 0
115:: g1.get_num_edges()= 0
115:: Edges of 'g1':{}
116:: g2.get_num_nodes()= 6
116:: g2.get_num_edges()= 5
116:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 120
123:: g1.get_num_nodes()= 6
123:: g1.get_num_edges()= 5
123:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
129:: g1.get_num_nodes()= 0
129:: g1.get_num_edges()= 0
129:: Edges of 'g1':{}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_directed_graph()
-----------------------------------
case starting at line: 58
60:: g1.get_num_nodes()= 10
60:: g1.get_num_edges()= 0
60:: Edges of 'g1':{}
Copy constructor: 'g2 <- g1'
64:: g1.get_num_nodes()= 10
64:: g1.get_num_edges()= 0
64:: Edges of 'g1':{}
65:: g2.get_num_nodes()= 10
65:: g2.get_num_edges()= 0
65:: Edges of 'g2':{}
-----------------------------------
case starting at line: 69
72:: g1.get_num_nodes()= 6
72:: g1.get_num_edges()= 5
72:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'g2 <- g1'
76:: g1.get_num_nodes()= 6
76:: g1.get_num_edges()= 5
76:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
77:: g2.get_num_nodes()= 6
77:: g2.get_num_edges()= 5
77:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 81
84:: g1.get_num_nodes()= 6
84:: g1.get_num_edges()= 5
84:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy constructor: 'v[0] <- g1'
89:: g1.get_num_nodes()= 6
89:: g1.get_num_edges()= 5
89:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 95
97:: g1.get_num_nodes()= 10
97:: g1.get_num_edges()= 0
97:: Edges of 'g1':{}
Copy operator: 'g2 <- g1'
102:: g1.get_num_nodes()= 10
102:: g1.get_num_edges()= 0
102:: Edges of 'g1':{}
103:: g2.get_num_nodes()= 10
103:: g2.get_num_edges()= 0
103:: Edges of 'g2':{}
-----------------------------------
case starting at line: 107
110:: g1.get_num_nodes()= 6
110:: g1.get_num_edges()= 5
110:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'g2 <- g1'
115:: g1.get_num_nodes()= 6
115:: g1.get_num_edges()= 5
115:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
116:: g2.get_num_nodes()= 6
116:: g2.get_num_edges()= 5
116:: Edges of 'g2':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
-----------------------------------
case starting at line: 120
123:: g1.get_num_nodes()= 6
123:: g1.get_num_edges()= 5
123:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
Copy operator: 'v[0] <- g1'
129:: g1.get_num_nodes()= 6
129:: g1.get_num_edges()= 5
129:: Edges of 'g1':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (1,2) (1,5) (2,4)}
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_ugraph_into_ftree()
-----------------------------------
case starting at line: 58
60:: g1.get_num_nodes()= 1
60:: g1.get_num_edges()= 0
60:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
64:: g1.get_num_nodes()= 0
64:: g1.get_num_edges()= 0
64:: Edges of 'g1':{}
65:: g2.get_num_nodes()= 1
65:: g2.get_num_edges()= 0
65:: Edges of 'g2':{}
65:: g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 69
72:: g1.get_num_nodes()= 6
72:: g1.get_num_edges()= 5
72:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
76:: g1.get_num_nodes()= 0
76:: g1.get_num_edges()= 0
76:: Edges of 'g1':{}
77:: g2.get_num_nodes()= 6
77:: g2.get_num_edges()= 5
77:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
77:: g2.get_num_nodes_component(0)= 6
77:: g2.get_num_nodes_component(1)= 6
77:: g2.get_num_nodes_component(2)= 6
77:: g2.get_num_nodes_component(3)= 6
77:: g2.get_num_nodes_component(4)= 6
77:: g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 81
84:: g1.get_num_nodes()= 6
84:: g1.get_num_edges()= 5
84:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
89:: g1.get_num_nodes()= 0
89:: g1.get_num_edges()= 0
89:: Edges of 'g1':{}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
90:: v[0].get_num_nodes_component(0)= 6
90:: v[0].get_num_nodes_component(1)= 6
90:: v[0].get_num_nodes_component(2)= 6
90:: v[0].get_num_nodes_component(3)= 6
90:: v[0].get_num_nodes_component(4)= 6
90:: v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 95
97:: g1.get_num_nodes()= 1
97:: g1.get_num_edges()= 0
97:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
102:: g1.get_num_nodes()= 0
102:: g1.get_num_edges()= 0
102:: Edges of 'g1':{}
103:: g2.get_num_nodes()= 1
103:: g2.get_num_edges()= 0
103:: Edges of 'g2':{}
103:: g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 107
110:: g1.get_num_nodes()= 6
110:: g1.get_num_edges()= 5
110:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'g2 <- g1'
115:: g1.get_num_nodes()= 0
115:: g1.get_num_edges()= 0
115:: Edges of 'g1':{}
116:: g2.get_num_nodes()= 6
116:: g2.get_num_edges()= 5
116:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
116:: g2.get_num_nodes_component(0)= 6
116:: g2.get_num_nodes_component(1)= 6
116:: g2.get_num_nodes_component(2)= 6
116:: g2.get_num_nodes_component(3)= 6
116:: g2.get_num_nodes_component(4)= 6
116:: g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 120
123:: g1.get_num_nodes()= 6
123:: g1.get_num_edges()= 5
123:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
129:: g1.get_num_nodes()= 0
129:: g1.get_num_edges()= 0
129:: Edges of 'g1':{}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
130:: v[0].get_num_nodes_component(0)= 6
130:: v[0].get_num_nodes_component(1)= 6
130:: v[0].get_num_nodes_component(2)= 6
130:: v[0].get_num_nodes_component(3)= 6
130:: v[0].get_num_nodes_component(4)= 6
130:: v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_ugraph_into_ftree()
-----------------------------------
case starting at line: 58
60:: g1.get_num_nodes()= 1
60:: g1.get_num_edges()= 0
60:: Edges of 'g1':{}
Move constructor: 'g2 <- g1'
64:: g1.get_num_nodes()= 1
64:: g1.get_num_edges()= 0
64:: Edges of 'g1':{}
65:: g2.get_num_nodes()= 1
65:: g2.get_num_edges()= 0
65:: Edges of 'g2':{}
65:: g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 69
72:: g1.get_num_nodes()= 6
72:: g1.get_num_edges()= 5
72:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'g2 <- g1'
76:: g1.get_num_nodes()= 6
76:: g1.get_num_edges()= 5
76:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
77:: g2.get_num_nodes()= 6
77:: g2.get_num_edges()= 5
77:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
77:: g2.get_num_nodes_component(0)= 6
77:: g2.get_num_nodes_component(1)= 6
77:: g2.get_num_nodes_component(2)= 6
77:: g2.get_num_nodes_component(3)= 6
77:: g2.get_num_nodes_component(4)= 6
77:: g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 81
84:: g1.get_num_nodes()= 6
84:: g1.get_num_edges()= 5
84:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move constructor: 'v[0] <- g1'
89:: g1.get_num_nodes()= 6
89:: g1.get_num_edges()= 5
89:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
90:: v[0].get_num_nodes_component(0)= 6
90:: v[0].get_num_nodes_component(1)= 6
90:: v[0].get_num_nodes_component(2)= 6
90:: v[0].get_num_nodes_component(3)= 6
90:: v[0].get_num_nodes_component(4)= 6
90:: v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 95
97:: g1.get_num_nodes()= 1
97:: g1.get_num_edges()= 0
97:: Edges of 'g1':{}
Move operator: 'g2 <- g1'
102:: g1.get_num_nodes()= 1
102:: g1.get_num_edges()= 0
102:: Edges of 'g1':{}
103:: g2.get_num_nodes()= 1
103:: g2.get_num_edges()= 0
103:: Edges of 'g2':{}
103:: g2.get_num_nodes_component(0)= 1
-----------------------------------
case starting at line: 107
110:: g1.get_num_nodes()= 6
110:: g1.get_num_edges()= 5
110:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'g2 <- g1'
115:: g1.get_num_nodes()= 6
115:: g1.get_num_edges()= 5
115:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
116:: g2.get_num_nodes()= 6
116:: g2.get_num_edges()= 5
116:: Edges of 'g2':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
116:: g2.get_num_nodes_component(0)= 6
116:: g2.get_num_nodes_component(1)= 6
116:: g2.get_num_nodes_component(2)= 6
116:: g2.get_num_nodes_component(3)= 6
116:: g2.get_num_nodes_component(4)= 6
116:: g2.get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 120
123:: g1.get_num_nodes()= 6
123:: g1.get_num_edges()= 5
123:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
Move operator: 'v[0] <- g1'
129:: g1.get_num_nodes()= 6
129:: g1.get_num_edges()= 5
129:: Edges of 'g1':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (1,3) (1,5) (2,4)}
130:: v[0].get_num_nodes_component(0)= 6
130:: v[0].get_num_nodes_component(1)= 6
130:: v[0].get_num_nodes_component(2)= 6
130:: v[0].get_num_nodes_component(3)= 6
130:: v[0].get_num_nodes_component(4)= 6
130:: v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_free_tree()
-----------------------------------
case starting at line: 58
60:: t1.get_num_nodes()= 5
60:: t1.get_num_edges()= 0
60:: Edges of 't1':{}
60:: t1.get_num_nodes_component(0)= 1
60:: t1.get_num_nodes_component(1)= 1
60:: t1.get_num_nodes_component(2)= 1
60:: t1.get_num_nodes_component(3)= 1
60:: t1.get_num_nodes_component(4)= 1
Move constructor: 't2 <- t1'
64:: t1.get_num_nodes()= 0
64:: t1.get_num_edges()= 0
64:: Edges of 't1':{}
65:: t2.get_num_nodes()= 5
65:: t2.get_num_edges()= 0
65:: Edges of 't2':{}
65:: t2.get_num_nodes_component(0)= 1
65:: t2.get_num_nodes_component(1)= 1
65:: t2.get_num_nodes_component(2)= 1
65:: t2.get_num_nodes_component(3)= 1
65:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 69
72:: t1.get_num_nodes()= 5
72:: t1.get_num_edges()= 4
72:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
72:: t1.get_num_nodes_component(0)= 5
72:: t1.get_num_nodes_component(1)= 5
72:: t1.get_num_nodes_component(2)= 5
72:: t1.get_num_nodes_component(3)= 5
72:: t1.get_num_nodes_component(4)= 5
Move constructor: 't2 <- t1'
76:: t1.get_num_nodes()= 0
76:: t1.get_num_edges()= 0
76:: Edges of 't1':{}
77:: t2.get_num_nodes()= 5
77:: t2.get_num_edges()= 4
77:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
77:: t2.get_num_nodes_component(0)= 5
77:: t2.get_num_nodes_component(1)= 5
77:: t2.get_num_nodes_component(2)= 5
77:: t2.get_num_nodes_component(3)= 5
77:: t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 81
84:: t1.get_num_nodes()= 6
84:: t1.get_num_edges()= 5
84:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
84:: t1.get_num_nodes_component(0)= 6
84:: t1.get_num_nodes_component(1)= 6
84:: t1.get_num_nodes_component(2)= 6
84:: t1.get_num_nodes_component(3)= 6
84:: t1.get_num_nodes_component(4)= 6
84:: t1.get_num_nodes_component(5)= 6
Move constructor: 'v[0] <- t1'
89:: t1.get_num_nodes()= 0
89:: t1.get_num_edges()= 0
89:: Edges of 't1':{}
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
90:: v[0].get_num_nodes_component(0)= 6
90:: v[0].get_num_nodes_component(1)= 6
90:: v[0].get_num_nodes_component(2)= 6
90:: v[0].get_num_nodes_component(3)= 6
90:: v[0].get_num_nodes_component(4)= 6
90:: v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 95
97:: t1.get_num_nodes()= 5
97:: t1.get_num_edges()= 0
97:: Edges of 't1':{}
97:: t1.get_num_nodes_component(0)= 1
97:: t1.get_num_nodes_component(1)= 1
97:: t1.get_num_nodes_component(2)= 1
97:: t1.get_num_nodes_component(3)= 1
97:: t1.get_num_nodes_component(4)= 1
Move operator: 't2 <- t1'
102:: t1.get_num_nodes()= 0
102:: t1.get_num_edges()= 0
102:: Edges of 't1':{}
103:: t2.get_num_nodes()= 5
103:: t2.get_num_edges()= 0
103:: Edges of 't2':{}
103:: t2.get_num_nodes_component(0)= 1
103:: t2.get_num_nodes_component(1)= 1
103:: t2.get_num_nodes_component(2)= 1
103:: t2.get_num_nodes_component(3)= 1
103:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 107
110:: t1.get_num_nodes()= 5
110:: t1.get_num_edges()= 4
110:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
110:: t1.get_num_nodes_component(0)= 5
110:: t1.get_num_nodes_component(1)= 5
110:: t1.get_num_nodes_component(2)= 5
110:: t1.get_num_nodes_component(3)= 5
110:: t1.get_num_nodes_component(4)= 5
Move operator: 't2 <- t1'
115:: t1.get_num_nodes()= 0
115:: t1.get_num_edges()= 0
115:: Edges of 't1':{}
116:: t2.get_num_nodes()= 5
116:: t2.get_num_edges()= 4
116:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
116:: t2.get_num_nodes_component(0)= 5
116:: t2.get_num_nodes_component(1)= 5
116:: t2.get_num_nodes_component(2)= 5
116:: t2.get_num_nodes_component(3)= 5
116:: t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 120
123:: t1.get_num_nodes()= 6
123:: t1.get_num_edges()= 5
123:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
123:: t1.get_num_nodes_component(0)= 6
123:: t1.get_num_nodes_component(1)= 6
123:: t1.get_num_nodes_component(2)= 6
123:: t1.get_num_nodes_component(3)= 6
123:: t1.get_num_nodes_component(4)= 6
123:: t1.get_num_nodes_component(5)= 6
Move operator: 'v[0] <- t1'
129:: t1.get_num_nodes()= 0
129:: t1.get_num_edges()= 0
129:: Edges of 't1':{}
130:: v[0].get_num_nodes()= 6
130:: v[0].get_num_edges()= 5
130:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
130:: v[0].get_num_nodes_component(0)= 6
130:: v[0].get_num_nodes_component(1)= 6
130:: v[0].get_num_nodes_component(2)= 6
130:: v[0].get_num_nodes_component(3)= 6
130:: v[0].get_num_nodes_component(4)= 6
130:: v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_free_tree()
-----------------------------------
case starting at line: 58
60:: t1.get_num_nodes()= 5
60:: t1.get_num_edges()= 0
60:: Edges of 't1':{}
60:: t1.get_num_nodes_component(0)= 1
60:: t1.get_num_nodes_component(1)= 1
60:: t1.get_num_nodes_component(2)= 1
60:: t1.get_num_nodes_component(3)= 1
60:: t1.get_num_nodes_component(4)= 1
Copy constructor: 't2 <- t1'
64:: t1.get_num_nodes()= 5
64:: t1.get_num_edges()= 0
64:: Edges of 't1':{}
64:: t1.get_num_nodes_component(0)= 1
64:: t1.get_num_nodes_component(1)= 1
64:: t1.get_num_nodes_component(2)= 1
64:: t1.get_num_nodes_component(3)= 1
64:: t1.get_num_nodes_component(4)= 1
65:: t2.get_num_nodes()= 5
65:: t2.get_num_edges()= 0
65:: Edges of 't2':{}
65:: t2.get_num_nodes_component(0)= 1
65:: t2.get_num_nodes_component(1)= 1
65:: t2.get_num_nodes_component(2)= 1
65:: t2.get_num_nodes_component(3)= 1
65:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 69
72:: t1.get_num_nodes()= 5
72:: t1.get_num_edges()= 4
72:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
72:: t1.get_num_nodes_component(0)= 5
72:: t1.get_num_nodes_component(1)= 5
72:: t1.get_num_nodes_component(2)= 5
72:: t1.get_num_nodes_component(3)= 5
72:: t1.get_num_nodes_component(4)= 5
Copy constructor: 't2 <- t1'
76:: t1.get_num_nodes()= 5
76:: t1.get_num_edges()= 4
76:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
76:: t1.get_num_nodes_component(0)= 5
76:: t1.get_num_nodes_component(1)= 5
76:: t1.get_num_nodes_component(2)= 5
76:: t1.get_num_nodes_component(3)= 5
76:: t1.get_num_nodes_component(4)= 5
77:: t2.get_num_nodes()= 5
77:: t2.get_num_edges()= 4
77:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
77:: t2.get_num_nodes_component(0)= 5
77:: t2.get_num_nodes_component(1)= 5
77:: t2.get_num_nodes_component(2)= 5
77:: t2.get_num_nodes_component(3)= 5
77:: t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 81
84:: t1.get_num_nodes()= 6
84:: t1.get_num_edges()= 5
84:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
84:: t1.get_num_nodes_component(0)= 6
84:: t1.get_num_nodes_component(1)= 6
84:: t1.get_num_nodes_component(2)= 6
84:: t1.get_num_nodes_component(3)= 6
84:: t1.get_num_nodes_component(4)= 6
84:: t1.get_num_nodes_component(5)= 6
Copy constructor: 'v[0] <- t1'
89:: t1.get_num_nodes()= 6
89:: t1.get_num_edges()= 5
89:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
89:: t1.get_num_nodes_component(0)= 6
89:: t1.get_num_nodes_component(1)= 6
89:: t1.get_num_nodes_component(2)= 6
89:: t1.get_num_nodes_component(3)= 6
89:: t1.get_num_nodes_component(4)= 6
89:: t1.get_num_nodes_component(5)= 6
90:: v[0].get_num_nodes()= 6
90:: v[0].get_num_edges()= 5
90:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
90:: v[0].get_num_nodes_component(0)= 6
90:: v[0].get_num_nodes_component(1)= 6
90:: v[0].get_num_nodes_component(2)= 6
90:: v[0].get_num_nodes_component(3)= 6
90:: v[0].get_num_nodes_component(4)= 6
90:: v[0].get_num_nodes_component(5)= 6
-----------------------------------
case starting at line: 94
98:: t.get_num_nodes()= 5
98:: t.get_num_edges()= 4
98:: Edges of 't':{ (0,1) (1,2) (2,3) (3,4)}
98:: t.get_num_nodes_component(0)= 5
98:: t.get_num_nodes_component(1)= 5
98:: t.get_num_nodes_component(2)= 5
98:: t.get_num_nodes_component(3)= 5
98:: t.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 103
105:: t1.get_num_nodes()= 5
105:: t1.get_num_edges()= 0
105:: Edges of 't1':{}
105:: t1.get_num_nodes_component(0)= 1
105:: t1.get_num_nodes_component(1)= 1
105:: t1.get_num_nodes_component(2)= 1
105:: t1.get_num_nodes_component(3)= 1
105:: t1.get_num_nodes_component(4)= 1
Copy operator: 't2 <- t1'
110:: t1.get_num_nodes()= 5
110:: t1.get_num_edges()= 0
110:: Edges of 't1':{}
110:: t1.get_num_nodes_component(0)= 1
110:: t1.get_num_nodes_component(1)= 1
110:: t1.get_num_nodes_component(2)= 1
110:: t1.get_num_nodes_component(3)= 1
110:: t1.get_num_nodes_component(4)= 1
111:: t2.get_num_nodes()= 5
111:: t2.get_num_edges()= 0
111:: Edges of 't2':{}
111:: t2.get_num_nodes_component(0)= 1
111:: t2.get_num_nodes_component(1)= 1
111:: t2.get_num_nodes_component(2)= 1
111:: t2.get_num_nodes_component(3)= 1
111:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 115
118:: t1.get_num_nodes()= 5
118:: t1.get_num_edges()= 4
118:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
118:: t1.get_num_nodes_component(0)= 5
118:: t1.get_num_nodes_component(1)= 5
118:: t1.get_num_nodes_component(2)= 5
118:: t1.get_num_nodes_component(3)= 5
118:: t1.get_num_nodes_component(4)= 5
Copy operator: 't2 <- t1'
123:: t1.get_num_nodes()= 5
123:: t1.get_num_edges()= 4
123:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4)}
123:: t1.get_num_nodes_component(0)= 5
123:: t1.get_num_nodes_component(1)= 5
123:: t1.get_num_nodes_component(2)= 5
123:: t1.get_num_nodes_component(3)= 5
123:: t1.get_num_nodes_component(4)= 5
124:: t2.get_num_nodes()= 5
124:: t2.get_num_edges()= 4
124:: Edges of 't2':{ (0,1) (0,2) (0,3) (2,4)}
124:: t2.get_num_nodes_component(0)= 5
124:: t2.get_num_nodes_component(1)= 5
124:: t2.get_num_nodes_component(2)= 5
124:: t2.get_num_nodes_component(3)= 5
124:: t2.get_num_nodes_component(4)= 5
-----------------------------------
case starting at line: 128
131:: t1.get_num_nodes()= 6
131:: t1.get_num_edges()= 5
131:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
131:: t1.get_num_nodes_component(0)= 6
131:: t1.get_num_nodes_component(1)= 6
131:: t1.get_num_nodes_component(2)= 6
131:: t1.get_num_nodes_component(3)= 6
131:: t1.get_num_nodes_component(4)= 6
131:: t1.get_num_nodes_component(5)= 6
Copy operator: 'v[0] <- t1'
137:: t1.get_num_nodes()= 6
137:: t1.get_num_edges()= 5
137:: Edges of 't1':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
137:: t1.get_num_nodes_component(0)= 6
137:: t1.get_num_nodes_component(1)= 6
137:: t1.get_num_nodes_component(2)= 6
137:: t1.get_num_nodes_component(3)= 6
137:: t1.get_num_nodes_component(4)= 6
137:: t1.get_num_nodes_component(5)= 6
138:: v[0].get_num_nodes()= 6
138:: v[0].get_num_edges()= 5
138:: Edges of 'v[0]':{ (0,1) (0,2) (0,3) (2,4) (3,5)}
138:: v[0].get_num_nodes_component(0)= 6
138:: v[0].get_num_nodes_component(1)= 6
138:: v[0].get_num_nodes_component(2)= 6
138:: v[0].get_num_nodes_component(3)= 6
138:: v[0].get_num_nodes_component(4)= 6
138:: v[0].get_num_nodes_component(5)= 6
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_move_rooted_tree()
-----------------------------------
case starting at line: 58
60:: t1.get_num_nodes()= 5
60:: t1.get_num_edges()= 0
60:: Edges of 't1':{}
60:: t1.get_num_nodes_component(0)= 1
60:: t1.get_num_nodes_component(1)= 1
60:: t1.get_num_nodes_component(2)= 1
60:: t1.get_num_nodes_component(3)= 1
60:: t1.get_num_nodes_component(4)= 1
Move constructor: 't2 <- t1'
64:: t1.get_num_nodes()= 0
64:: t1.get_num_edges()= 0
64:: Edges of 't1':{}
65:: t2.get_num_nodes()= 5
65:: t2.get_num_edges()= 0
65:: Edges of 't2':{}
65:: t2.get_num_nodes_component(0)= 1
65:: t2.get_num_nodes_component(1)= 1
65:: t2.get_num_nodes_component(2)= 1
65:: t2.get_num_nodes_component(3)= 1
65:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 69
75:: t1.get_num_nodes()= 5
75:: t1.get_num_edges()= 4
75:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
75:: t1.get_num_nodes_component(0)= 5
75:: t1.get_num_nodes_component(1)= 5
75:: t1.get_num_nodes_component(2)= 5
75:: t1.get_num_nodes_component(3)= 5
75:: t1.get_num_nodes_component(4)= 5
75:: t1.get_root()= 3
75:: t1.get_num_nodes_subtree(0)= 1
75:: t1.get_num_nodes_subtree(1)= 1
75:: t1.get_num_nodes_subtree(2)= 2
75:: t1.get_num_nodes_subtree(3)= 5
75:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 't2 <- t1'
79:: t1.get_num_nodes()= 0
79:: t1.get_num_edges()= 0
79:: Edges of 't1':{}
80:: t2.get_num_nodes()= 5
80:: t2.get_num_edges()= 4
80:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
80:: t2.get_num_nodes_component(0)= 5
80:: t2.get_num_nodes_component(1)= 5
80:: t2.get_num_nodes_component(2)= 5
80:: t2.get_num_nodes_component(3)= 5
80:: t2.get_num_nodes_component(4)= 5
80:: t2.get_root()= 3
80:: t2.get_num_nodes_subtree(0)= 1
80:: t2.get_num_nodes_subtree(1)= 1
80:: t2.get_num_nodes_subtree(2)= 2
80:: t2.get_num_nodes_subtree(3)= 5
80:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 84
90:: t1.get_num_nodes()= 5
90:: t1.get_num_edges()= 4
90:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
90:: t1.get_num_nodes_component(0)= 5
90:: t1.get_num_nodes_component(1)= 5
90:: t1.get_num_nodes_component(2)= 5
90:: t1.get_num_nodes_component(3)= 5
90:: t1.get_num_nodes_component(4)= 5
90:: t1.get_root()= 3
90:: t1.get_num_nodes_subtree(0)= 1
90:: t1.get_num_nodes_subtree(1)= 1
90:: t1.get_num_nodes_subtree(2)= 2
90:: t1.get_num_nodes_subtree(3)= 5
90:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 'v[0] <- t1'
95:: t1.get_num_nodes()= 0
95:: t1.get_num_edges()= 0
95:: Edges of 't1':{}
96:: v[0].get_num_nodes()= 5
96:: v[0].get_num_edges()= 4
96:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
96:: v[0].get_num_nodes_component(0)= 5
96:: v[0].get_num_nodes_component(1)= 5
96:: v[0].get_num_nodes_component(2)= 5
96:: v[0].get_num_nodes_component(3)= 5
96:: v[0].get_num_nodes_component(4)= 5
96:: v[0].get_root()= 3
96:: v[0].get_num_nodes_subtree(0)= 1
96:: v[0].get_num_nodes_subtree(1)= 1
96:: v[0].get_num_nodes_subtree(2)= 2
96:: v[0].get_num_nodes_subtree(3)= 5
96:: v[0].get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 101
103:: t1.get_num_nodes()= 5
103:: t1.get_num_edges()= 0
103:: Edges of 't1':{}
103:: t1.get_num_nodes_component(0)= 1
103:: t1.get_num_nodes_component(1)= 1
103:: t1.get_num_nodes_component(2)= 1
103:: t1.get_num_nodes_component(3)= 1
103:: t1.get_num_nodes_component(4)= 1
Move constructor: 't2 <- t1'
108:: t1.get_num_nodes()= 0
108:: t1.get_num_edges()= 0
108:: Edges of 't1':{}
109:: t2.get_num_nodes()= 5
109:: t2.get_num_edges()= 0
109:: Edges of 't2':{}
109:: t2.get_num_nodes_component(0)= 1
109:: t2.get_num_nodes_component(1)= 1
109:: t2.get_num_nodes_component(2)= 1
109:: t2.get_num_nodes_component(3)= 1
109:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 113
119:: t1.get_num_nodes()= 5
119:: t1.get_num_edges()= 4
119:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
119:: t1.get_num_nodes_component(0)= 5
119:: t1.get_num_nodes_component(1)= 5
119:: t1.get_num_nodes_component(2)= 5
119:: t1.get_num_nodes_component(3)= 5
119:: t1.get_num_nodes_component(4)= 5
119:: t1.get_root()= 3
119:: t1.get_num_nodes_subtree(0)= 1
119:: t1.get_num_nodes_subtree(1)= 1
119:: t1.get_num_nodes_subtree(2)= 2
119:: t1.get_num_nodes_subtree(3)= 5
119:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 't2 <- t1'
124:: t1.get_num_nodes()= 0
124:: t1.get_num_edges()= 0
124:: Edges of 't1':{}
125:: t2.get_num_nodes()= 5
125:: t2.get_num_edges()= 4
125:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
125:: t2.get_num_nodes_component(0)= 5
125:: t2.get_num_nodes_component(1)= 5
125:: t2.get_num_nodes_component(2)= 5
125:: t2.get_num_nodes_component(3)= 5
125:: t2.get_num_nodes_component(4)= 5
125:: t2.get_root()= 3
125:: t2.get_num_nodes_subtree(0)= 1
125:: t2.get_num_nodes_subtree(1)= 1
125:: t2.get_num_nodes_subtree(2)= 2
125:: t2.get_num_nodes_subtree(3)= 5
125:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 129
135:: t1.get_num_nodes()= 5
135:: t1.get_num_edges()= 4
135:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
135:: t1.get_num_nodes_component(0)= 5
135:: t1.get_num_nodes_component(1)= 5
135:: t1.get_num_nodes_component(2)= 5
135:: t1.get_num_nodes_component(3)= 5
135:: t1.get_num_nodes_component(4)= 5
135:: t1.get_root()= 3
135:: t1.get_num_nodes_subtree(0)= 1
135:: t1.get_num_nodes_subtree(1)= 1
135:: t1.get_num_nodes_subtree(2)= 2
135:: t1.get_num_nodes_subtree(3)= 5
135:: t1.get_num_nodes_subtree(4)= 1
Move constructor: 'v[0] <- t1'
141:: t1.get_num_nodes()= 0
141:: t1.get_num_edges()= 0
141:: Edges of 't1':{}
142:: v[0].get_num_nodes()= 5
142:: v[0].get_num_edges()= 4
142:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
142:: v[0].get_num_nodes_component(0)= 5
142:: v[0].get_num_nodes_component(1)= 5
142:: v[0].get_num_nodes_component(2)= 5
142:: v[0].get_num_nodes_component(3)= 5
142:: v[0].get_num_nodes_component(4)= 5
142:: v[0].get_root()= 3
142:: v[0].get_num_nodes_subtree(0)= 1
142:: v[0].get_num_nodes_subtree(1)= 1
142:: v[0].get_num_nodes_subtree(2)= 2
142:: v[0].get_num_nodes_subtree(3)= 5
142:: v[0].get_num_nodes_subtree(4)= 1
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_copy_rooted_tree()
-----------------------------------
case starting at line: 58
60:: t1.get_num_nodes()= 5
60:: t1.get_num_edges()= 0
60:: Edges of 't1':{}
60:: t1.get_num_nodes_component(0)= 1
60:: t1.get_num_nodes_component(1)= 1
60:: t1.get_num_nodes_component(2)= 1
60:: t1.get_num_nodes_component(3)= 1
60:: t1.get_num_nodes_component(4)= 1
Copy constructor: 't2 <- t1'
64:: t1.get_num_nodes()= 5
64:: t1.get_num_edges()= 0
64:: Edges of 't1':{}
64:: t1.get_num_nodes_component(0)= 1
64:: t1.get_num_nodes_component(1)= 1
64:: t1.get_num_nodes_component(2)= 1
64:: t1.get_num_nodes_component(3)= 1
64:: t1.get_num_nodes_component(4)= 1
65:: t2.get_num_nodes()= 5
65:: t2.get_num_edges()= 0
65:: Edges of 't2':{}
65:: t2.get_num_nodes_component(0)= 1
65:: t2.get_num_nodes_component(1)= 1
65:: t2.get_num_nodes_component(2)= 1
65:: t2.get_num_nodes_component(3)= 1
65:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 69
75:: t1.get_num_nodes()= 5
75:: t1.get_num_edges()= 4
75:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
75:: t1.get_num_nodes_component(0)= 5
75:: t1.get_num_nodes_component(1)= 5
75:: t1.get_num_nodes_component(2)= 5
75:: t1.get_num_nodes_component(3)= 5
75:: t1.get_num_nodes_component(4)= 5
75:: t1.get_root()= 3
75:: t1.get_num_nodes_subtree(0)= 1
75:: t1.get_num_nodes_subtree(1)= 1
75:: t1.get_num_nodes_subtree(2)= 2
75:: t1.get_num_nodes_subtree(3)= 5
75:: t1.get_num_nodes_subtree(4)= 1
Copy constructor: 't2 <- t1'
79:: t1.get_num_nodes()= 5
79:: t1.get_num_edges()= 4
79:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
79:: t1.get_num_nodes_component(0)= 5
79:: t1.get_num_nodes_component(1)= 5
79:: t1.get_num_nodes_component(2)= 5
79:: t1.get_num_nodes_component(3)= 5
79:: t1.get_num_nodes_component(4)= 5
79:: t1.get_root()= 3
79:: t1.get_num_nodes_subtree(0)= 1
79:: t1.get_num_nodes_subtree(1)= 1
79:: t1.get_num_nodes_subtree(2)= 2
79:: t1.get_num_nodes_subtree(3)= 5
79:: t1.get_num_nodes_subtree(4)= 1
80:: t2.get_num_nodes()= 5
80:: t2.get_num_edges()= 4
80:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
80:: t2.get_num_nodes_component(0)= 5
80:: t2.get_num_nodes_component(1)= 5
80:: t2.get_num_nodes_component(2)= 5
80:: t2.get_num_nodes_component(3)= 5
80:: t2.get_num_nodes_component(4)= 5
80:: t2.get_root()= 3
80:: t2.get_num_nodes_subtree(0)= 1
80:: t2.get_num_nodes_subtree(1)= 1
80:: t2.get_num_nodes_subtree(2)= 2
80:: t2.get_num_nodes_subtree(3)= 5
80:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 84
90:: t1.get_num_nodes()= 5
90:: t1.get_num_edges()= 4
90:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
90:: t1.get_num_nodes_component(0)= 5
90:: t1.get_num_nodes_component(1)= 5
90:: t1.get_num_nodes_component(2)= 5
90:: t1.get_num_nodes_component(3)= 5
90:: t1.get_num_nodes_component(4)= 5
90:: t1.get_root()= 3
90:: t1.get_num_nodes_subtree(0)= 1
90:: t1.get_num_nodes_subtree(1)= 1
90:: t1.get_num_nodes_subtree(2)= 2
90:: t1.get_num_nodes_subtree(3)= 5
90:: t1.get_num_nodes_subtree(4)= 1
Copy constructor: 'v[0] <- t1'
95:: t1.get_num_nodes()= 5
95:: t1.get_num_edges()= 4
95:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
95:: t1.get_num_nodes_component(0)= 5
95:: t1.get_num_nodes_component(1)= 5
95:: t1.get_num_nodes_component(2)= 5
95:: t1.get_num_nodes_component(3)= 5
95:: t1.get_num_nodes_component(4)= 5
95:: t1.get_root()= 3
95:: t1.get_num_nodes_subtree(0)= 1
95:: t1.get_num_nodes_subtree(1)= 1
95:: t1.get_num_nodes_subtree(2)= 2
95:: t1.get_num_nodes_subtree(3)= 5
95:: t1.get_num_nodes_subtree(4)= 1
96:: v[0].get_num_nodes()= 5
96:: v[0].get_num_edges()= 4
96:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
96:: v[0].get_num_nodes_component(0)= 5
96:: v[0].get_num_nodes_component(1)= 5
96:: v[0].get_num_nodes_component(2)= 5
96:: v[0].get_num_nodes_component(3)= 5
96:: v[0].get_num_nodes_component(4)= 5
96:: v[0].get_root()= 3
96:: v[0].get_num_nodes_subtree(0)= 1
96:: v[0].get_num_nodes_subtree(1)= 1
96:: v[0].get_num_nodes_subtree(2)= 2
96:: v[0].get_num_nodes_subtree(3)= 5
96:: v[0].get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 101
103:: t1.get_num_nodes()= 5
103:: t1.get_num_edges()= 0
103:: Edges of 't1':{}
103:: t1.get_num_nodes_component(0)= 1
103:: t1.get_num_nodes_component(1)= 1
103:: t1.get_num_nodes_component(2)= 1
103:: t1.get_num_nodes_component(3)= 1
103:: t1.get_num_nodes_component(4)= 1
Copy operator: 't2 <- t1'
108:: t1.get_num_nodes()= 5
108:: t1.get_num_edges()= 0
108:: Edges of 't1':{}
108:: t1.get_num_nodes_component(0)= 1
108:: t1.get_num_nodes_component(1)= 1
108:: t1.get_num_nodes_component(2)= 1
108:: t1.get_num_nodes_component(3)= 1
108:: t1.get_num_nodes_component(4)= 1
109:: t2.get_num_nodes()= 5
109:: t2.get_num_edges()= 0
109:: Edges of 't2':{}
109:: t2.get_num_nodes_component(0)= 1
109:: t2.get_num_nodes_component(1)= 1
109:: t2.get_num_nodes_component(2)= 1
109:: t2.get_num_nodes_component(3)= 1
109:: t2.get_num_nodes_component(4)= 1
-----------------------------------
case starting at line: 113
119:: t1.get_num_nodes()= 5
119:: t1.get_num_edges()= 4
119:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
119:: t1.get_num_nodes_component(0)= 5
119:: t1.get_num_nodes_component(1)= 5
119:: t1.get_num_nodes_component(2)= 5
119:: t1.get_num_nodes_component(3)= 5
119:: t1.get_num_nodes_component(4)= 5
119:: t1.get_root()= 3
119:: t1.get_num_nodes_subtree(0)= 1
119:: t1.get_num_nodes_subtree(1)= 1
119:: t1.get_num_nodes_subtree(2)= 2
119:: t1.get_num_nodes_subtree(3)= 5
119:: t1.get_num_nodes_subtree(4)= 1
Copy operator: 't2 <- t1'
124:: t1.get_num_nodes()= 5
124:: t1.get_num_edges()= 4
124:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
124:: t1.get_num_nodes_component(0)= 5
124:: t1.get_num_nodes_component(1)= 5
124:: t1.get_num_nodes_component(2)= 5
124:: t1.get_num_nodes_component(3)= 5
124:: t1.get_num_nodes_component(4)= 5
124:: t1.get_root()= 3
124:: t1.get_num_nodes_subtree(0)= 1
124:: t1.get_num_nodes_subtree(1)= 1
124:: t1.get_num_nodes_subtree(2)= 2
124:: t1.get_num_nodes_subtree(3)= 5
124:: t1.get_num_nodes_subtree(4)= 1
125:: t2.get_num_nodes()= 5
125:: t2.get_num_edges()= 4
125:: Edges of 't2':{ (2,4) (3,0) (3,1) (3,2)}
125:: t2.get_num_nodes_component(0)= 5
125:: t2.get_num_nodes_component(1)= 5
125:: t2.get_num_nodes_component(2)= 5
125:: t2.get_num_nodes_component(3)= 5
125:: t2.get_num_nodes_component(4)= 5
125:: t2.get_root()= 3
125:: t2.get_num_nodes_subtree(0)= 1
125:: t2.get_num_nodes_subtree(1)= 1
125:: t2.get_num_nodes_subtree(2)= 2
125:: t2.get_num_nodes_subtree(3)= 5
125:: t2.get_num_nodes_subtree(4)= 1
-----------------------------------
case starting at line: 129
135:: t1.get_num_nodes()= 5
135:: t1.get_num_edges()= 4
135:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
135:: t1.get_num_nodes_component(0)= 5
135:: t1.get_num_nodes_component(1)= 5
135:: t1.get_num_nodes_component(2)= 5
135:: t1.get_num_nodes_component(3)= 5
135:: t1.get_num_nodes_component(4)= 5
135:: t1.get_root()= 3
135:: t1.get_num_nodes_subtree(0)= 1
135:: t1.get_num_nodes_subtree(1)= 1
135:: t1.get_num_nodes_subtree(2)= 2
135:: t1.get_num_nodes_subtree(3)= 5
135:: t1.get_num_nodes_subtree(4)= 1
Copy operator: 'v[0] <- t1'
141:: t1.get_num_nodes()= 5
141:: t1.get_num_edges()= 4
141:: Edges of 't1':{ (2,4) (3,0) (3,1) (3,2)}
141:: t1.get_num_nodes_component(0)= 5
141:: t1.get_num_nodes_component(1)= 5
141:: t1.get_num_nodes_component(2)= 5
141:: t1.get_num_nodes_component(3)= 5
141:: t1.get_num_nodes_component(4)= 5
141:: t1.get_root()= 3
141:: t1.get_num_nodes_subtree(0)= 1
141:: t1.get_num_nodes_subtree(1)= 1
141:: t1.get_num_nodes_subtree(2)= 2
141:: t1.get_num_nodes_subtree(3)= 5
141:: t1.get_num_nodes_subtree(4)= 1
142:: v[0].get_num_nodes()= 5
142:: v[0].get_num_edges()= 4
142:: Edges of 'v[0]':{ (2,4) (3,0) (3,1) (3,2)}
142:: v[0].get_num_nodes_component(0)= 5
142:: v[0].get_num_nodes_component(1)= 5
142:: v[0].get_num_nodes_component(2)= 5
142:: v[0].get_num_nodes_component(3)= 5
142:: v[0].get_num_nodes_component(4)= 5
142:: v[0].get_root()= 3
142:: v[0].get_num_nodes_subtree(0)= 1
142:: v[0].get_num_nodes_subtree(1)= 1
142:: v[0].get_num_nodes_subtree(2)= 2
142:: v[0].get_num_nodes_subtree(3)= 5
142:: v[0].get_num_nodes_subtree(4)= 1
+++++++++++++++++++++++++++++++++
function: void tests::memory::test_generate()
-----------------------------------
case starting at line: 78
-----------------------------------
case starting at line: 85
-----------------------------------
case starting at line: 92
-----------------------------------
case starting at line: 99
Test finished without apparent errors.
