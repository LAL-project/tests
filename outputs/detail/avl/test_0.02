1) insert
(insert 1) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

2) print_tree
(1, '1'), nc= 1, s= 0, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: ∅
| +r+: ∅

3) sanity_check
4) insert
(insert 2) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

5) print_tree
(1, '1'), nc= 1, s= 0, ls= 0, rs= 1, h= 1, ts= 2, tc= 2, bf= 1
| -l-: ∅
| +r+: (2, '2'), nc= 1, s= r, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| +r+: | -l-: ∅
| +r+: | +r+: ∅

6) sanity_check
7) assert_occurrences
8) largest_element
(largest element (2, '2')) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

9) smallest_element
(smallest element (1, '1')) frequencies:
    counter_equal:    1
    counter_larger:   1
    num_nodes_larger: 1

10) total_elements
Number of occurrences in the tree: 2
11) num_nodes
Number of nodes in the tree: 2
Test finished without apparent errors.
