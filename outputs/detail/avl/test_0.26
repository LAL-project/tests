1) insert
(insert 2) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

2) print_tree
(2, '2'), nc= 1, s= 0, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: ∅
| +r+: ∅

3) sanity_check
4) insert
(insert 1) frequencies:
    counter_equal:    1
    counter_larger:   1
    num_nodes_larger: 1

5) print_tree
(2, '2'), nc= 1, s= 0, ls= 1, rs= 0, h= 1, ts= 2, tc= 2, bf= -1
| -l-: (1, '1'), nc= 1, s= l, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: | -l-: ∅
| -l-: | +r+: ∅
| +r+: ∅

6) sanity_check
7) insert
(insert 3) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

8) print_tree
(2, '2'), nc= 1, s= 0, ls= 1, rs= 1, h= 1, ts= 3, tc= 3, bf= 0
| -l-: (1, '1'), nc= 1, s= l, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: | -l-: ∅
| -l-: | +r+: ∅
| +r+: (3, '3'), nc= 1, s= r, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| +r+: | -l-: ∅
| +r+: | +r+: ∅

9) sanity_check
10) remove_non_unique
(remove 1) frequencies:
    counter_equal:    1
    counter_larger:   2
    num_nodes_larger: 2

11) print_tree
(2, '2'), nc= 1, s= 0, ls= 0, rs= 1, h= 1, ts= 2, tc= 2, bf= 1
| -l-: ∅
| +r+: (3, '3'), nc= 1, s= r, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| +r+: | -l-: ∅
| +r+: | +r+: ∅

12) sanity_check
13) clear
14) insert
(insert 2) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

15) print_tree
(2, '2'), nc= 1, s= 0, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: ∅
| +r+: ∅

16) sanity_check
17) insert
(insert 1) frequencies:
    counter_equal:    1
    counter_larger:   1
    num_nodes_larger: 1

18) print_tree
(2, '2'), nc= 1, s= 0, ls= 1, rs= 0, h= 1, ts= 2, tc= 2, bf= -1
| -l-: (1, '1'), nc= 1, s= l, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: | -l-: ∅
| -l-: | +r+: ∅
| +r+: ∅

19) sanity_check
20) insert
(insert 3) frequencies:
    counter_equal:    1
    counter_larger:   0
    num_nodes_larger: 0

21) print_tree
(2, '2'), nc= 1, s= 0, ls= 1, rs= 1, h= 1, ts= 3, tc= 3, bf= 0
| -l-: (1, '1'), nc= 1, s= l, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| -l-: | -l-: ∅
| -l-: | +r+: ∅
| +r+: (3, '3'), nc= 1, s= r, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| +r+: | -l-: ∅
| +r+: | +r+: ∅

22) sanity_check
23) remove_unique
(remove 1) frequencies:
    counter_equal:    1
    counter_larger:   2
    num_nodes_larger: 2

24) print_tree
(2, '2'), nc= 1, s= 0, ls= 0, rs= 1, h= 1, ts= 2, tc= 2, bf= 1
| -l-: ∅
| +r+: (3, '3'), nc= 1, s= r, ls= 0, rs= 0, h= 0, ts= 1, tc= 1, bf= 0
| +r+: | -l-: ∅
| +r+: | +r+: ∅

25) sanity_check
Test finished without apparent errors.
